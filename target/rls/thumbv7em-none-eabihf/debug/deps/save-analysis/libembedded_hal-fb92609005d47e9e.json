{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3","program":"/home/iot_dev/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","embedded_hal","/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"unproven\"","-C","metadata=fb92609005d47e9e","-C","extra-filename=-fb92609005d47e9e","--out-dir","/home/iot_dev/Documents/Rust_prac/stm_dac_prac/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/iot_dev/Documents/Rust_prac/stm_dac_prac/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/iot_dev/Documents/Rust_prac/stm_dac_prac/target/rls/debug/deps","--extern","nb=/home/iot_dev/Documents/Rust_prac/stm_dac_prac/target/rls/thumbv7em-none-eabihf/debug/deps/libnb-521a721fe47306d4.rmeta","--extern","void=/home/iot_dev/Documents/Rust_prac/stm_dac_prac/target/rls/thumbv7em-none-eabihf/debug/deps/libvoid-541dadb2e3bc5667.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iot_dev/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iot_dev/Documents/Rust_prac/stm_dac_prac/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_hal-fb92609005d47e9e.rmeta"},"prelude":{"crate_id":{"name":"embedded_hal","disambiguator":[14192731543434241208,9750388677511335932]},"crate_root":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src","external_crates":[{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[7129969481079228738,2143730474782836743]}},{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11277988289717680727,16145094614111037762]}},{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4786679559509047750,15344410412348702295]}},{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","num":4,"id":{"name":"nb","disambiguator":[18191903061419670470,12877724137164416707]}},{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","num":5,"id":{"name":"void","disambiguator":[16209607075570444994,3394579166367035571]}}],"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":0,"byte_end":29397,"line_start":1,"line_end":995,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43914,"byte_end":43915,"line_start":24,"line_end":24,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"ToggleableOutputPin, InputPin, OutputPin","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62366,"byte_end":62373,"line_start":7,"line_end":7,"column_start":14,"column_end":21},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62377,"byte_end":62402,"line_start":7,"line_end":7,"column_start":25,"column_end":50},"name":"_embedded_hal_adc_OneShot","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62429,"byte_end":62436,"line_start":8,"line_end":8,"column_start":26,"column_end":33},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62440,"byte_end":62476,"line_start":8,"line_end":8,"column_start":37,"column_end":73},"name":"_embedded_hal_blocking_delay_DelayMs","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62503,"byte_end":62510,"line_start":9,"line_end":9,"column_start":26,"column_end":33},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62514,"byte_end":62550,"line_start":9,"line_end":9,"column_start":37,"column_end":73},"name":"_embedded_hal_blocking_delay_DelayUs","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62581,"byte_end":62585,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62589,"byte_end":62620,"line_start":11,"line_end":11,"column_start":13,"column_end":44},"name":"_embedded_hal_blocking_i2c_Read","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62622,"byte_end":62627,"line_start":11,"line_end":11,"column_start":46,"column_end":51},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62631,"byte_end":62663,"line_start":11,"line_end":11,"column_start":55,"column_end":87},"name":"_embedded_hal_blocking_i2c_Write","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62669,"byte_end":62678,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62682,"byte_end":62718,"line_start":12,"line_end":12,"column_start":18,"column_end":54},"name":"_embedded_hal_blocking_i2c_WriteRead","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62775,"byte_end":62779,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62783,"byte_end":62814,"line_start":15,"line_end":15,"column_start":32,"column_end":63},"name":"_embedded_hal_blocking_rng_Read","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62842,"byte_end":62847,"line_start":16,"line_end":16,"column_start":27,"column_end":32},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62851,"byte_end":62886,"line_start":16,"line_end":16,"column_start":36,"column_end":71},"name":"_embedded_hal_blocking_serial_Write","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62917,"byte_end":62925,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62929,"byte_end":62964,"line_start":18,"line_end":18,"column_start":17,"column_end":52},"name":"_embedded_hal_blocking_spi_Transfer","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62966,"byte_end":62971,"line_start":18,"line_end":18,"column_start":54,"column_end":59},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62975,"byte_end":63007,"line_start":18,"line_end":18,"column_start":63,"column_end":95},"name":"_embedded_hal_blocking_spi_Write","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63079,"byte_end":63087,"line_start":22,"line_end":22,"column_start":18,"column_end":26},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63091,"byte_end":63121,"line_start":22,"line_end":22,"column_start":30,"column_end":60},"name":"_embedded_hal_digital_InputPin","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63161,"byte_end":63170,"line_start":24,"line_end":24,"column_start":18,"column_end":27},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63174,"byte_end":63205,"line_start":24,"line_end":24,"column_start":31,"column_end":62},"name":"_embedded_hal_digital_OutputPin","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63274,"byte_end":63293,"line_start":27,"line_end":27,"column_start":18,"column_end":37},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63297,"byte_end":63338,"line_start":27,"line_end":27,"column_start":41,"column_end":82},"name":"_embedded_hal_digital_ToggleableOutputPin","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63356,"byte_end":63360,"line_start":28,"line_end":28,"column_start":17,"column_end":21},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63364,"byte_end":63389,"line_start":28,"line_end":28,"column_start":25,"column_end":50},"name":"_embedded_hal_serial_Read","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63407,"byte_end":63412,"line_start":29,"line_end":29,"column_start":17,"column_end":22},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63416,"byte_end":63442,"line_start":29,"line_end":29,"column_start":26,"column_end":52},"name":"_embedded_hal_serial_Write","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63457,"byte_end":63467,"line_start":30,"line_end":30,"column_start":14,"column_end":24},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63471,"byte_end":63499,"line_start":30,"line_end":30,"column_start":28,"column_end":56},"name":"_embedded_hal_spi_FullDuplex","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63516,"byte_end":63525,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63529,"byte_end":63558,"line_start":31,"line_end":31,"column_start":29,"column_end":58},"name":"_embedded_hal_timer_CountDown","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63607,"byte_end":63615,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63619,"byte_end":63650,"line_start":33,"line_end":33,"column_start":31,"column_end":62},"name":"_embedded_hal_watchdog_Watchdog","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63699,"byte_end":63714,"line_start":35,"line_end":35,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63718,"byte_end":63756,"line_start":35,"line_end":35,"column_start":38,"column_end":76},"name":"_embedded_hal_watchdog_WatchdogDisable","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63805,"byte_end":63819,"line_start":37,"line_end":37,"column_start":19,"column_end":33},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63823,"byte_end":63860,"line_start":37,"line_end":37,"column_start":37,"column_end":74},"name":"_embedded_hal_watchdog_WatchdogEnable","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63899,"byte_end":63906,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63910,"byte_end":63931,"line_start":39,"line_end":39,"column_start":20,"column_end":41},"name":"_embedded_hal_Capture","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63970,"byte_end":63973,"line_start":41,"line_end":41,"column_start":9,"column_end":12},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":63977,"byte_end":63994,"line_start":41,"line_end":41,"column_start":16,"column_end":33},"name":"_embedded_hal_Pwm","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":64004,"byte_end":64010,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":64014,"byte_end":64034,"line_start":42,"line_end":42,"column_start":19,"column_end":39},"name":"_embedded_hal_PwmPin","value":"","parent":{"krate":0,"index":218}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":64073,"byte_end":64076,"line_start":44,"line_end":44,"column_start":9,"column_end":12},"alias_span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":64080,"byte_end":64097,"line_start":44,"line_end":44,"column_start":16,"column_end":33},"name":"_embedded_hal_Qei","value":"","parent":{"krate":0,"index":218}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":0,"byte_end":29397,"line_start":1,"line_end":995,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":18},{"krate":0,"index":104},{"krate":0,"index":209},{"krate":0,"index":218},{"krate":0,"index":245},{"krate":0,"index":256},{"krate":0,"index":267},{"krate":0,"index":279},{"krate":0,"index":288},{"krate":0,"index":299},{"krate":0,"index":311},{"krate":0,"index":318},{"krate":0,"index":363},{"krate":0,"index":377},{"krate":0,"index":376},{"krate":0,"index":374},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":368},{"krate":0,"index":369}],"decl_id":null,"docs":" A Hardware Abstraction Layer (HAL) for embedded systems","sig":null,"attributes":[{"value":"! A Hardware Abstraction Layer (HAL) for embedded systems","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":0,"byte_end":59,"line_start":1,"line_end":1,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":60,"byte_end":63,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! **NOTE** This HAL is still is active development. Expect the traits presented here to be","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":64,"byte_end":156,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! tweaked, split or be replaced wholesale before being stabilized, i.e. before hitting the 1.0.0","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":157,"byte_end":255,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"! release. That being said there's a part of the HAL that's currently considered unproven and is","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":256,"byte_end":354,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"! hidden behind an \"unproven\" Cargo feature. This API is even more volatile and it's exempt from","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":355,"byte_end":453,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"! semver rules: it can change in a non-backward compatible fashion or even disappear in between","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":454,"byte_end":551,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"! patch releases.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":552,"byte_end":571,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":572,"byte_end":575,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # Design goals","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":576,"byte_end":594,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":595,"byte_end":598,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! The HAL","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":599,"byte_end":610,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":611,"byte_end":614,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! - Must *erase* device specific details. Neither register, register blocks or magic values should","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":615,"byte_end":715,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"! appear in the API.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":716,"byte_end":738,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":739,"byte_end":742,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! - Must be generic *within* a device and *across* devices. The API to use a serial interface must","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":743,"byte_end":843,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"! be the same regardless of whether the implementation uses the USART1 or UART4 peripheral of a","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":844,"byte_end":941,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"! device or the UART0 peripheral of another device.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":942,"byte_end":995,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":996,"byte_end":999,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! - Where possible must *not* be tied to a specific asynchronous model. The API should be usable","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1000,"byte_end":1098,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"! in blocking mode, with the `futures` model, with an async/await model or with a callback model.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1099,"byte_end":1198,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"! (cf. the [`nb`] crate)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1199,"byte_end":1225,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1226,"byte_end":1229,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! - Must be minimal, and thus easy to implement and zero cost, yet highly composable. People that","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1230,"byte_end":1329,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"! want higher level abstraction should *prefer to use this HAL* rather than *re-implement*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1330,"byte_end":1422,"line_start":26,"line_end":26,"column_start":1,"column_end":93}},{"value":"! register manipulation code.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1423,"byte_end":1454,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1455,"byte_end":1458,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! - Serve as a foundation for building an ecosystem of platform agnostic drivers. Here driver","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1459,"byte_end":1554,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"! means a library crate that lets a target platform interface an external device like a digital","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1555,"byte_end":1652,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"! sensor or a wireless transceiver. The advantage of this system is that by writing the driver as","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1653,"byte_end":1752,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"! a generic library on top of `embedded-hal` driver authors can support any number of target","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1753,"byte_end":1847,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"! platforms (e.g. Cortex-M microcontrollers, AVR microcontrollers, embedded Linux, etc.). The","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1848,"byte_end":1943,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"! advantage for application developers is that by adopting `embedded-hal` they can unlock all","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":1944,"byte_end":2039,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"! these drivers for their platform.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2040,"byte_end":2077,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2078,"byte_end":2081,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! # Out of scope","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2082,"byte_end":2100,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2101,"byte_end":2104,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! - Initialization and configuration stuff like \"ensure this serial interface and that SPI","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2105,"byte_end":2197,"line_start":39,"line_end":39,"column_start":1,"column_end":93}},{"value":"! interface are not using the same pins\". The HAL will focus on *doing I/O*.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2198,"byte_end":2276,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2277,"byte_end":2280,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! # Reference implementation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2281,"byte_end":2311,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2312,"byte_end":2315,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! The [`stm32f30x-hal`] crate contains a reference implementation of this HAL.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2316,"byte_end":2396,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! [`stm32f30x-hal`]: https://crates.io/crates/stm32f30x-hal/0.1.0","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2401,"byte_end":2468,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2469,"byte_end":2472,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! # Platform agnostic drivers","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2473,"byte_end":2504,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2505,"byte_end":2508,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! You can find platform agnostic drivers built on top of `embedded-hal` on crates.io by [searching","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2509,"byte_end":2609,"line_start":50,"line_end":50,"column_start":1,"column_end":101}},{"value":"! for the *embedded-hal* keyword](https://crates.io/keywords/embedded-hal).","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2610,"byte_end":2687,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2688,"byte_end":2691,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! If you writing a platform agnostic driver yourself you are highly encouraged to [add the","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2692,"byte_end":2784,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"! embedded-hal keyword](https://doc.rust-lang.org/cargo/reference/manifest.html#package-metadata)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2785,"byte_end":2884,"line_start":54,"line_end":54,"column_start":1,"column_end":100}},{"value":"! to your crate before publishing it!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2885,"byte_end":2924,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2925,"byte_end":2928,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! # Detailed design","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2929,"byte_end":2950,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2951,"byte_end":2954,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! ## Traits","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2955,"byte_end":2968,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2969,"byte_end":2972,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! The HAL is specified as traits to allow generic programming. These traits make use of the","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":2973,"byte_end":3066,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"! [`nb`][] crate (*please go read that crate documentation before continuing*) to abstract over","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3067,"byte_end":3164,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"! the asynchronous model and to also provide a blocking operation mode.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3165,"byte_end":3238,"line_start":63,"line_end":63,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3239,"byte_end":3242,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! [`nb`]: https://crates.io/crates/nb","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3243,"byte_end":3282,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3283,"byte_end":3286,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! Here's how a HAL trait may look like:","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3287,"byte_end":3328,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3329,"byte_end":3332,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3333,"byte_end":3340,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3341,"byte_end":3361,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3362,"byte_end":3365,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! /// A serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3366,"byte_end":3392,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"! pub trait Serial {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3393,"byte_end":3415,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"!     /// Error type associated to this serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3416,"byte_end":3474,"line_start":74,"line_end":74,"column_start":1,"column_end":59}},{"value":"!     type Error;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3475,"byte_end":3494,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3495,"byte_end":3498,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"!     /// Reads a single byte","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3499,"byte_end":3530,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"!     fn read(&mut self) -> nb::Result<u8, Self::Error>;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3531,"byte_end":3589,"line_start":78,"line_end":78,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3590,"byte_end":3593,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"!     /// Writes a single byte","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3594,"byte_end":3626,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"!     fn write(&mut self, byte: u8) -> nb::Result<(), Self::Error>;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3627,"byte_end":3696,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3697,"byte_end":3702,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3703,"byte_end":3710,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3711,"byte_end":3714,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! The `nb::Result` enum is used to add a [`WouldBlock`] variant to the errors","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3715,"byte_end":3794,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"! of the serial interface. As explained in the documentation of the `nb` crate this single API,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3795,"byte_end":3892,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"! when paired with the macros in the `nb` crate, can operate in a blocking manner, or in a","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3893,"byte_end":3985,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"! non-blocking manner compatible with `futures` and with the `await!` operator.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":3986,"byte_end":4067,"line_start":88,"line_end":88,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4068,"byte_end":4071,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! [`WouldBlock`]: https://docs.rs/nb/0.1.0/nb/enum.Error.html","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4072,"byte_end":4135,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4136,"byte_end":4139,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! Some traits, like the one shown below, may expose possibly blocking APIs that can't fail. In","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4140,"byte_end":4236,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"! those cases `nb::Result<_, Void>` is used.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4237,"byte_end":4283,"line_start":93,"line_end":93,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4284,"byte_end":4287,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4288,"byte_end":4295,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4296,"byte_end":4316,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"! extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4317,"byte_end":4339,"line_start":97,"line_end":97,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4340,"byte_end":4343,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! use void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4344,"byte_end":4363,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4364,"byte_end":4367,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! /// A count down timer","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4368,"byte_end":4394,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"! pub trait CountDown {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4395,"byte_end":4420,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"!     // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4421,"byte_end":4434,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4435,"byte_end":4438,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"!     /// \"waits\" until the count down is over","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4439,"byte_end":4487,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"!     fn wait(&mut self) -> nb::Result<(), Void>;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4488,"byte_end":4539,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4540,"byte_end":4545,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4546,"byte_end":4549,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! # fn main() {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4550,"byte_end":4568,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4569,"byte_end":4576,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4577,"byte_end":4580,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! ## Suggested implementation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4581,"byte_end":4612,"line_start":112,"line_end":112,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4613,"byte_end":4616,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! The HAL traits should be implemented for device crates generated via [`svd2rust`] to maximize","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4617,"byte_end":4714,"line_start":114,"line_end":114,"column_start":1,"column_end":98}},{"value":"! code reuse.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4715,"byte_end":4730,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4731,"byte_end":4734,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! [`svd2rust`]: https://crates.io/crates/svd2rust","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4735,"byte_end":4786,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4787,"byte_end":4790,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! Shown below is an implementation of some of the HAL traits for the [`stm32f30x`] crate. This","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4791,"byte_end":4887,"line_start":119,"line_end":119,"column_start":1,"column_end":97}},{"value":"! single implementation will work for *any* microcontroller in the STM32F30x family.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4888,"byte_end":4974,"line_start":120,"line_end":120,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4975,"byte_end":4978,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! [`stm32f30x`]: https://crates.io/crates/stm32f30x","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":4979,"byte_end":5032,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5033,"byte_end":5036,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5037,"byte_end":5044,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"! // crate: stm32f30x-hal","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5045,"byte_end":5072,"line_start":125,"line_end":125,"column_start":1,"column_end":28}},{"value":"! // An implementation of the `embedded-hal` traits for STM32F30x microcontrollers","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5073,"byte_end":5157,"line_start":126,"line_end":126,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5158,"byte_end":5161,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5162,"byte_end":5199,"line_start":128,"line_end":128,"column_start":1,"column_end":38}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5200,"byte_end":5220,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5221,"byte_end":5224,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! // device crate","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5225,"byte_end":5244,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"! extern crate stm32f30x;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5245,"byte_end":5272,"line_start":132,"line_end":132,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5273,"byte_end":5276,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! use stm32f30x::USART1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5277,"byte_end":5303,"line_start":134,"line_end":134,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5304,"byte_end":5307,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! /// A serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5308,"byte_end":5334,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"! // NOTE generic over the USART peripheral","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5335,"byte_end":5380,"line_start":137,"line_end":137,"column_start":1,"column_end":46}},{"value":"! pub struct Serial<USART> { usart: USART }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5381,"byte_end":5426,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5427,"byte_end":5430,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! // convenience type alias","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5431,"byte_end":5460,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"! pub type Serial1 = Serial<USART1>;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5461,"byte_end":5499,"line_start":141,"line_end":141,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5500,"byte_end":5503,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! /// Serial interface error","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5504,"byte_end":5534,"line_start":143,"line_end":143,"column_start":1,"column_end":31}},{"value":"! pub enum Error {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5535,"byte_end":5555,"line_start":144,"line_end":144,"column_start":1,"column_end":21}},{"value":"!     /// Buffer overrun","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5556,"byte_end":5582,"line_start":145,"line_end":145,"column_start":1,"column_end":27}},{"value":"!     Overrun,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5583,"byte_end":5599,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"!     // omitted: other error variants","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5600,"byte_end":5640,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5641,"byte_end":5646,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5647,"byte_end":5650,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! impl hal::serial::Read<u8> for Serial<USART1> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5651,"byte_end":5702,"line_start":150,"line_end":150,"column_start":1,"column_end":52}},{"value":"!     type Error = Error;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5703,"byte_end":5730,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5731,"byte_end":5734,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"!     fn read(&mut self) -> nb::Result<u8, Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5735,"byte_end":5788,"line_start":153,"line_end":153,"column_start":1,"column_end":54}},{"value":"!         // read the status register","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5789,"byte_end":5828,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"!         let isr = self.usart.isr.read();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5829,"byte_end":5873,"line_start":155,"line_end":155,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5874,"byte_end":5877,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"!         if isr.ore().bit_is_set() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5878,"byte_end":5917,"line_start":157,"line_end":157,"column_start":1,"column_end":40}},{"value":"!             // Error: Buffer overrun","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5918,"byte_end":5958,"line_start":158,"line_end":158,"column_start":1,"column_end":41}},{"value":"!             Err(nb::Error::Other(Error::Overrun))","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":5959,"byte_end":6012,"line_start":159,"line_end":159,"column_start":1,"column_end":54}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6013,"byte_end":6026,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"!         // omitted: checks for other errors","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6027,"byte_end":6074,"line_start":161,"line_end":161,"column_start":1,"column_end":48}},{"value":"!         else if isr.rxne().bit_is_set() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6075,"byte_end":6120,"line_start":162,"line_end":162,"column_start":1,"column_end":46}},{"value":"!             // Data available: read the data register","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6121,"byte_end":6178,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"!             Ok(self.usart.rdr.read().bits() as u8)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6179,"byte_end":6233,"line_start":164,"line_end":164,"column_start":1,"column_end":55}},{"value":"!         } else {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6234,"byte_end":6254,"line_start":165,"line_end":165,"column_start":1,"column_end":21}},{"value":"!             // No data available yet","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6255,"byte_end":6295,"line_start":166,"line_end":166,"column_start":1,"column_end":41}},{"value":"!             Err(nb::Error::WouldBlock)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6296,"byte_end":6338,"line_start":167,"line_end":167,"column_start":1,"column_end":43}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6339,"byte_end":6352,"line_start":168,"line_end":168,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6353,"byte_end":6362,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6363,"byte_end":6368,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6369,"byte_end":6372,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! impl hal::serial::Write<u8> for Serial<USART1> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6373,"byte_end":6425,"line_start":172,"line_end":172,"column_start":1,"column_end":53}},{"value":"!     type Error = Error;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6426,"byte_end":6453,"line_start":173,"line_end":173,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6454,"byte_end":6457,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"!     fn write(&mut self, byte: u8) -> nb::Result<(), Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6458,"byte_end":6522,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"!         // Similar to the `read` implementation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6523,"byte_end":6574,"line_start":176,"line_end":176,"column_start":1,"column_end":52}},{"value":"!         # Ok(())","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6575,"byte_end":6595,"line_start":177,"line_end":177,"column_start":1,"column_end":21}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6596,"byte_end":6605,"line_start":178,"line_end":178,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6606,"byte_end":6609,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"!     fn flush(&mut self) -> nb::Result<(), Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6610,"byte_end":6664,"line_start":180,"line_end":180,"column_start":1,"column_end":55}},{"value":"!         // Similar to the `read` implementation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6665,"byte_end":6716,"line_start":181,"line_end":181,"column_start":1,"column_end":52}},{"value":"!         # Ok(())","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6717,"byte_end":6737,"line_start":182,"line_end":182,"column_start":1,"column_end":21}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6738,"byte_end":6747,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6748,"byte_end":6753,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6754,"byte_end":6757,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! # fn main() {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6758,"byte_end":6776,"line_start":186,"line_end":186,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6777,"byte_end":6784,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6785,"byte_end":6788,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! ## Intended usage","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6789,"byte_end":6810,"line_start":189,"line_end":189,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6811,"byte_end":6814,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! Thanks to the [`nb`] crate the HAL API can be used in a blocking manner,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6815,"byte_end":6891,"line_start":191,"line_end":191,"column_start":1,"column_end":77}},{"value":"! with `futures` or with the `await` operator using the [`block!`],","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6892,"byte_end":6961,"line_start":192,"line_end":192,"column_start":1,"column_end":70}},{"value":"! [`try_nb!`] and [`await!`] macros respectively.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":6962,"byte_end":7013,"line_start":193,"line_end":193,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7014,"byte_end":7017,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! [`block!`]: https://docs.rs/nb/0.1.0/nb/macro.block.html","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7018,"byte_end":7078,"line_start":195,"line_end":195,"column_start":1,"column_end":61}},{"value":"! [`try_nb!`]: https://docs.rs/nb/0.1.0/nb/index.html#how-to-use-this-crate","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7079,"byte_end":7156,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"! [`await!`]: https://docs.rs/nb/0.1.0/nb/index.html#how-to-use-this-crate","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7157,"byte_end":7233,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7234,"byte_end":7237,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! ### Blocking mode","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7238,"byte_end":7259,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7260,"byte_end":7263,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! An example of sending a string over the serial interface in a blocking","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7264,"byte_end":7338,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"! fashion:","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7339,"byte_end":7351,"line_start":202,"line_end":202,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7352,"byte_end":7355,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7356,"byte_end":7363,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"! extern crate embedded_hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7364,"byte_end":7394,"line_start":205,"line_end":205,"column_start":1,"column_end":31}},{"value":"! #[macro_use(block)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7395,"byte_end":7418,"line_start":206,"line_end":206,"column_start":1,"column_end":24}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7419,"byte_end":7439,"line_start":207,"line_end":207,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7440,"byte_end":7443,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! use stm32f30x_hal::Serial1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7444,"byte_end":7475,"line_start":209,"line_end":209,"column_start":1,"column_end":32}},{"value":"! use embedded_hal::serial::Write;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7476,"byte_end":7512,"line_start":210,"line_end":210,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7513,"byte_end":7516,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7517,"byte_end":7534,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"! let mut serial: Serial1 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7535,"byte_end":7566,"line_start":213,"line_end":213,"column_start":1,"column_end":32}},{"value":"!     // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7567,"byte_end":7580,"line_start":214,"line_end":214,"column_start":1,"column_end":14}},{"value":"! #   Serial1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7581,"byte_end":7596,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"! };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7597,"byte_end":7603,"line_start":216,"line_end":216,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7604,"byte_end":7607,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! for byte in b\"Hello, world!\" {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7608,"byte_end":7642,"line_start":218,"line_end":218,"column_start":1,"column_end":35}},{"value":"!     // NOTE `block!` blocks until `serial.write()` completes and returns","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7643,"byte_end":7719,"line_start":219,"line_end":219,"column_start":1,"column_end":77}},{"value":"!     // `Result<(), Error>`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7720,"byte_end":7750,"line_start":220,"line_end":220,"column_start":1,"column_end":31}},{"value":"!     block!(serial.write(*byte)).unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7751,"byte_end":7796,"line_start":221,"line_end":221,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7797,"byte_end":7802,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7803,"byte_end":7810,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7811,"byte_end":7814,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! # mod stm32f30x_hal {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7815,"byte_end":7840,"line_start":225,"line_end":225,"column_start":1,"column_end":26}},{"value":"! #     extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7841,"byte_end":7869,"line_start":226,"line_end":226,"column_start":1,"column_end":29}},{"value":"! #     use self::void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7870,"byte_end":7901,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"! #     pub struct Serial1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7902,"byte_end":7931,"line_start":228,"line_end":228,"column_start":1,"column_end":30}},{"value":"! #     impl Serial1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7932,"byte_end":7956,"line_start":229,"line_end":229,"column_start":1,"column_end":25}},{"value":"! #         pub fn write(&mut self, _: u8) -> ::nb::Result<(), Void> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":7957,"byte_end":8029,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"! #             Ok(())","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8030,"byte_end":8054,"line_start":231,"line_end":231,"column_start":1,"column_end":25}},{"value":"! #         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8055,"byte_end":8070,"line_start":232,"line_end":232,"column_start":1,"column_end":16}},{"value":"! #     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8071,"byte_end":8082,"line_start":233,"line_end":233,"column_start":1,"column_end":12}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8083,"byte_end":8090,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8091,"byte_end":8098,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8099,"byte_end":8102,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ### `futures`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8103,"byte_end":8120,"line_start":237,"line_end":237,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8121,"byte_end":8124,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! An example of running two tasks concurrently. First task: blink an LED every","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8125,"byte_end":8205,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"! second. Second task: loop back data over the serial interface.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8206,"byte_end":8272,"line_start":240,"line_end":240,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8273,"byte_end":8276,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8277,"byte_end":8284,"line_start":242,"line_end":242,"column_start":1,"column_end":8}},{"value":"! extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8285,"byte_end":8322,"line_start":243,"line_end":243,"column_start":1,"column_end":38}},{"value":"! extern crate futures;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8323,"byte_end":8348,"line_start":244,"line_end":244,"column_start":1,"column_end":26}},{"value":"! extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8349,"byte_end":8371,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8372,"byte_end":8375,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"! #[macro_use(try_nb)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8376,"byte_end":8400,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8401,"byte_end":8421,"line_start":248,"line_end":248,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8422,"byte_end":8425,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"! use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8426,"byte_end":8450,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"! use futures::{","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8451,"byte_end":8469,"line_start":251,"line_end":251,"column_start":1,"column_end":19}},{"value":"!     future,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8470,"byte_end":8485,"line_start":252,"line_end":252,"column_start":1,"column_end":16}},{"value":"!     Async,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8486,"byte_end":8500,"line_start":253,"line_end":253,"column_start":1,"column_end":15}},{"value":"!     Future,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8501,"byte_end":8516,"line_start":254,"line_end":254,"column_start":1,"column_end":16}},{"value":"! };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8517,"byte_end":8523,"line_start":255,"line_end":255,"column_start":1,"column_end":7}},{"value":"! use futures::future::Loop;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8524,"byte_end":8554,"line_start":256,"line_end":256,"column_start":1,"column_end":31}},{"value":"! use stm32f30x_hal::{Led, Serial1, Timer6};","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8555,"byte_end":8601,"line_start":257,"line_end":257,"column_start":1,"column_end":47}},{"value":"! use void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8602,"byte_end":8621,"line_start":258,"line_end":258,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8622,"byte_end":8625,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"! /// `futures` version of `CountDown.wait`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8626,"byte_end":8671,"line_start":260,"line_end":260,"column_start":1,"column_end":46}},{"value":"! ///","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8672,"byte_end":8679,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"! /// This returns a future that must be polled to completion","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8680,"byte_end":8743,"line_start":262,"line_end":262,"column_start":1,"column_end":64}},{"value":"! fn wait<T>(mut timer: T) -> impl Future<Item = T, Error = Void>","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8744,"byte_end":8811,"line_start":263,"line_end":263,"column_start":1,"column_end":68}},{"value":"! where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8812,"byte_end":8821,"line_start":264,"line_end":264,"column_start":1,"column_end":10}},{"value":"!     T: hal::timer::CountDown,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8822,"byte_end":8855,"line_start":265,"line_end":265,"column_start":1,"column_end":34}},{"value":"! {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8856,"byte_end":8861,"line_start":266,"line_end":266,"column_start":1,"column_end":6}},{"value":"!     let mut timer = Some(timer);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8862,"byte_end":8898,"line_start":267,"line_end":267,"column_start":1,"column_end":37}},{"value":"!     future::poll_fn(move || {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8899,"byte_end":8932,"line_start":268,"line_end":268,"column_start":1,"column_end":34}},{"value":"!         try_nb!(timer.as_mut().unwrap().wait());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8933,"byte_end":8985,"line_start":269,"line_end":269,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8986,"byte_end":8989,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"!         Ok(Async::Ready(timer.take().unwrap()))","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":8990,"byte_end":9041,"line_start":271,"line_end":271,"column_start":1,"column_end":52}},{"value":"!     })","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9042,"byte_end":9052,"line_start":272,"line_end":272,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9053,"byte_end":9058,"line_start":273,"line_end":273,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9059,"byte_end":9062,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"! /// `futures` version of `Serial.read`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9063,"byte_end":9105,"line_start":275,"line_end":275,"column_start":1,"column_end":43}},{"value":"! ///","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9106,"byte_end":9113,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"! /// This returns a future that must be polled to completion","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9114,"byte_end":9177,"line_start":277,"line_end":277,"column_start":1,"column_end":64}},{"value":"! fn read<S>(mut serial: S) -> impl Future<Item = (S, u8), Error = S::Error>","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9178,"byte_end":9256,"line_start":278,"line_end":278,"column_start":1,"column_end":79}},{"value":"! where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9257,"byte_end":9266,"line_start":279,"line_end":279,"column_start":1,"column_end":10}},{"value":"!     S: hal::serial::Read<u8>,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9267,"byte_end":9300,"line_start":280,"line_end":280,"column_start":1,"column_end":34}},{"value":"! {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9301,"byte_end":9306,"line_start":281,"line_end":281,"column_start":1,"column_end":6}},{"value":"!     let mut serial = Some(serial);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9307,"byte_end":9345,"line_start":282,"line_end":282,"column_start":1,"column_end":39}},{"value":"!     future::poll_fn(move || {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9346,"byte_end":9379,"line_start":283,"line_end":283,"column_start":1,"column_end":34}},{"value":"!         let byte = try_nb!(serial.as_mut().unwrap().read());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9380,"byte_end":9444,"line_start":284,"line_end":284,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9445,"byte_end":9448,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"!         Ok(Async::Ready((serial.take().unwrap(), byte)))","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9449,"byte_end":9509,"line_start":286,"line_end":286,"column_start":1,"column_end":61}},{"value":"!     })","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9510,"byte_end":9520,"line_start":287,"line_end":287,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9521,"byte_end":9526,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9527,"byte_end":9530,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"! /// `futures` version of `Serial.write`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9531,"byte_end":9574,"line_start":290,"line_end":290,"column_start":1,"column_end":44}},{"value":"! ///","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9575,"byte_end":9582,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"! /// This returns a future that must be polled to completion","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9583,"byte_end":9646,"line_start":292,"line_end":292,"column_start":1,"column_end":64}},{"value":"! fn write<S>(mut serial: S, byte: u8) -> impl Future<Item = S, Error = S::Error>","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9647,"byte_end":9730,"line_start":293,"line_end":293,"column_start":1,"column_end":84}},{"value":"! where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9731,"byte_end":9740,"line_start":294,"line_end":294,"column_start":1,"column_end":10}},{"value":"!     S: hal::serial::Write<u8>,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9741,"byte_end":9775,"line_start":295,"line_end":295,"column_start":1,"column_end":35}},{"value":"! {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9776,"byte_end":9781,"line_start":296,"line_end":296,"column_start":1,"column_end":6}},{"value":"!     let mut serial = Some(serial);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9782,"byte_end":9820,"line_start":297,"line_end":297,"column_start":1,"column_end":39}},{"value":"!     future::poll_fn(move || {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9821,"byte_end":9854,"line_start":298,"line_end":298,"column_start":1,"column_end":34}},{"value":"!         try_nb!(serial.as_mut().unwrap().write(byte));","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9855,"byte_end":9913,"line_start":299,"line_end":299,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9914,"byte_end":9917,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"!         Ok(Async::Ready(serial.take().unwrap()))","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9918,"byte_end":9970,"line_start":301,"line_end":301,"column_start":1,"column_end":53}},{"value":"!     })","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9971,"byte_end":9981,"line_start":302,"line_end":302,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9982,"byte_end":9987,"line_start":303,"line_end":303,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9988,"byte_end":9991,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":9992,"byte_end":10007,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"!     // HAL implementers","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10008,"byte_end":10035,"line_start":306,"line_end":306,"column_start":1,"column_end":28}},{"value":"!     let timer: Timer6 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10036,"byte_end":10065,"line_start":307,"line_end":307,"column_start":1,"column_end":30}},{"value":"!         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10066,"byte_end":10083,"line_start":308,"line_end":308,"column_start":1,"column_end":18}},{"value":"! #       Timer6","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10084,"byte_end":10102,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"!     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10103,"byte_end":10113,"line_start":310,"line_end":310,"column_start":1,"column_end":11}},{"value":"!     let serial: Serial1 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10114,"byte_end":10145,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"!         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10146,"byte_end":10163,"line_start":312,"line_end":312,"column_start":1,"column_end":18}},{"value":"! #       Serial1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10164,"byte_end":10183,"line_start":313,"line_end":313,"column_start":1,"column_end":20}},{"value":"!     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10184,"byte_end":10194,"line_start":314,"line_end":314,"column_start":1,"column_end":11}},{"value":"!     let led: Led = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10195,"byte_end":10219,"line_start":315,"line_end":315,"column_start":1,"column_end":25}},{"value":"!         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10220,"byte_end":10237,"line_start":316,"line_end":316,"column_start":1,"column_end":18}},{"value":"! #       Led","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10238,"byte_end":10253,"line_start":317,"line_end":317,"column_start":1,"column_end":16}},{"value":"!     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10254,"byte_end":10264,"line_start":318,"line_end":318,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10265,"byte_end":10268,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"!     // Tasks","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10269,"byte_end":10285,"line_start":320,"line_end":320,"column_start":1,"column_end":17}},{"value":"!     let mut blinky = future::loop_fn::<_, (), _, _>(","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10286,"byte_end":10342,"line_start":321,"line_end":321,"column_start":1,"column_end":57}},{"value":"!         (led, timer, true),","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10343,"byte_end":10374,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"!         |(mut led, mut timer, state)| {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10375,"byte_end":10418,"line_start":323,"line_end":323,"column_start":1,"column_end":44}},{"value":"!             wait(timer).map(move |timer| {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10419,"byte_end":10465,"line_start":324,"line_end":324,"column_start":1,"column_end":47}},{"value":"!                 if state {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10466,"byte_end":10496,"line_start":325,"line_end":325,"column_start":1,"column_end":31}},{"value":"!                     led.on();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10497,"byte_end":10530,"line_start":326,"line_end":326,"column_start":1,"column_end":34}},{"value":"!                 } else {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10531,"byte_end":10559,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"!                     led.off();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10560,"byte_end":10594,"line_start":328,"line_end":328,"column_start":1,"column_end":35}},{"value":"!                 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10595,"byte_end":10616,"line_start":329,"line_end":329,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10617,"byte_end":10620,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"!                 Loop::Continue((led, timer, !state))","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10621,"byte_end":10677,"line_start":331,"line_end":331,"column_start":1,"column_end":57}},{"value":"!             })","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10678,"byte_end":10696,"line_start":332,"line_end":332,"column_start":1,"column_end":19}},{"value":"!         });","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10697,"byte_end":10712,"line_start":333,"line_end":333,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10713,"byte_end":10716,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"!     let mut loopback = future::loop_fn::<_, (), _, _>(serial, |mut serial| {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10717,"byte_end":10797,"line_start":335,"line_end":335,"column_start":1,"column_end":81}},{"value":"!         read(serial).and_then(|(serial, byte)| {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10798,"byte_end":10850,"line_start":336,"line_end":336,"column_start":1,"column_end":53}},{"value":"!             write(serial, byte)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10851,"byte_end":10886,"line_start":337,"line_end":337,"column_start":1,"column_end":36}},{"value":"!         }).map(|serial| {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10887,"byte_end":10916,"line_start":338,"line_end":338,"column_start":1,"column_end":30}},{"value":"!             Loop::Continue(serial)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10917,"byte_end":10955,"line_start":339,"line_end":339,"column_start":1,"column_end":39}},{"value":"!         })","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10956,"byte_end":10970,"line_start":340,"line_end":340,"column_start":1,"column_end":15}},{"value":"!     });","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10971,"byte_end":10982,"line_start":341,"line_end":341,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10983,"byte_end":10986,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"!     // Event loop","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":10987,"byte_end":11008,"line_start":343,"line_end":343,"column_start":1,"column_end":22}},{"value":"!     loop {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11009,"byte_end":11023,"line_start":344,"line_end":344,"column_start":1,"column_end":15}},{"value":"!         blinky.poll().unwrap(); // NOTE(unwrap) E = Void","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11024,"byte_end":11084,"line_start":345,"line_end":345,"column_start":1,"column_end":61}},{"value":"!         loopback.poll().unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11085,"byte_end":11122,"line_start":346,"line_end":346,"column_start":1,"column_end":38}},{"value":"! #       break;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11123,"byte_end":11141,"line_start":347,"line_end":347,"column_start":1,"column_end":19}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11142,"byte_end":11151,"line_start":348,"line_end":348,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11152,"byte_end":11157,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11158,"byte_end":11161,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"! # mod stm32f30x_hal {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11162,"byte_end":11187,"line_start":351,"line_end":351,"column_start":1,"column_end":26}},{"value":"! #     extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11188,"byte_end":11216,"line_start":352,"line_end":352,"column_start":1,"column_end":29}},{"value":"! #     use self::void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11217,"byte_end":11248,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"! #     pub struct Timer6;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11249,"byte_end":11277,"line_start":354,"line_end":354,"column_start":1,"column_end":29}},{"value":"! #     impl ::hal::timer::CountDown for Timer6 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11278,"byte_end":11329,"line_start":355,"line_end":355,"column_start":1,"column_end":52}},{"value":"! #         type Time = ();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11330,"byte_end":11359,"line_start":356,"line_end":356,"column_start":1,"column_end":30}},{"value":"! #","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11360,"byte_end":11365,"line_start":357,"line_end":357,"column_start":1,"column_end":6}},{"value":"! #         fn start<T>(&mut self, _: T) where T: Into<()> {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11366,"byte_end":11429,"line_start":358,"line_end":358,"column_start":1,"column_end":64}},{"value":"! #         fn wait(&mut self) -> ::nb::Result<(), Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11430,"byte_end":11521,"line_start":359,"line_end":359,"column_start":1,"column_end":92}},{"value":"! #     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11522,"byte_end":11533,"line_start":360,"line_end":360,"column_start":1,"column_end":12}},{"value":"! #","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11534,"byte_end":11539,"line_start":361,"line_end":361,"column_start":1,"column_end":6}},{"value":"! #     pub struct Serial1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11540,"byte_end":11569,"line_start":362,"line_end":362,"column_start":1,"column_end":30}},{"value":"! #     impl ::hal::serial::Read<u8> for Serial1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11570,"byte_end":11622,"line_start":363,"line_end":363,"column_start":1,"column_end":53}},{"value":"! #         type Error = Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11623,"byte_end":11655,"line_start":364,"line_end":364,"column_start":1,"column_end":33}},{"value":"! #         fn read(&mut self) -> ::nb::Result<u8, Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11656,"byte_end":11747,"line_start":365,"line_end":365,"column_start":1,"column_end":92}},{"value":"! #     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11748,"byte_end":11759,"line_start":366,"line_end":366,"column_start":1,"column_end":12}},{"value":"! #     impl ::hal::serial::Write<u8> for Serial1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11760,"byte_end":11813,"line_start":367,"line_end":367,"column_start":1,"column_end":54}},{"value":"! #         type Error = Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11814,"byte_end":11846,"line_start":368,"line_end":368,"column_start":1,"column_end":33}},{"value":"! #         fn flush(&mut self) -> ::nb::Result<(), Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11847,"byte_end":11939,"line_start":369,"line_end":369,"column_start":1,"column_end":93}},{"value":"! #         fn write(&mut self, _: u8) -> ::nb::Result<(), Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":11940,"byte_end":12039,"line_start":370,"line_end":370,"column_start":1,"column_end":100}},{"value":"! #     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12040,"byte_end":12051,"line_start":371,"line_end":371,"column_start":1,"column_end":12}},{"value":"! #","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12052,"byte_end":12057,"line_start":372,"line_end":372,"column_start":1,"column_end":6}},{"value":"! #     pub struct Led;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12058,"byte_end":12083,"line_start":373,"line_end":373,"column_start":1,"column_end":26}},{"value":"! #     impl Led {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12084,"byte_end":12104,"line_start":374,"line_end":374,"column_start":1,"column_end":21}},{"value":"! #         pub fn off(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12105,"byte_end":12143,"line_start":375,"line_end":375,"column_start":1,"column_end":39}},{"value":"! #         pub fn on(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12144,"byte_end":12181,"line_start":376,"line_end":376,"column_start":1,"column_end":38}},{"value":"! #     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12182,"byte_end":12193,"line_start":377,"line_end":377,"column_start":1,"column_end":12}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12194,"byte_end":12201,"line_start":378,"line_end":378,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12202,"byte_end":12209,"line_start":379,"line_end":379,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12210,"byte_end":12213,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"! ### `await`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12214,"byte_end":12229,"line_start":381,"line_end":381,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12230,"byte_end":12233,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"! Same example as above but using `await!` instead of `futures`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12234,"byte_end":12300,"line_start":383,"line_end":383,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12301,"byte_end":12304,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12305,"byte_end":12312,"line_start":385,"line_end":385,"column_start":1,"column_end":8}},{"value":"! #![feature(generator_trait)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12313,"byte_end":12345,"line_start":386,"line_end":386,"column_start":1,"column_end":33}},{"value":"! #![feature(generators)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12346,"byte_end":12373,"line_start":387,"line_end":387,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12374,"byte_end":12377,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"! extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12378,"byte_end":12415,"line_start":389,"line_end":389,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12416,"byte_end":12419,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"! #[macro_use(await)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12420,"byte_end":12443,"line_start":391,"line_end":391,"column_start":1,"column_end":24}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12444,"byte_end":12464,"line_start":392,"line_end":392,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12465,"byte_end":12468,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"! use std::ops::Generator;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12469,"byte_end":12497,"line_start":394,"line_end":394,"column_start":1,"column_end":29}},{"value":"! use std::pin::Pin;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12498,"byte_end":12520,"line_start":395,"line_end":395,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12521,"byte_end":12524,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"! use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12525,"byte_end":12549,"line_start":397,"line_end":397,"column_start":1,"column_end":25}},{"value":"! use stm32f30x_hal::{Led, Serial1, Timer6};","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12550,"byte_end":12596,"line_start":398,"line_end":398,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12597,"byte_end":12600,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12601,"byte_end":12616,"line_start":400,"line_end":400,"column_start":1,"column_end":16}},{"value":"!     // HAL implementers","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12617,"byte_end":12644,"line_start":401,"line_end":401,"column_start":1,"column_end":28}},{"value":"!     let mut timer: Timer6 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12645,"byte_end":12678,"line_start":402,"line_end":402,"column_start":1,"column_end":34}},{"value":"!         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12679,"byte_end":12696,"line_start":403,"line_end":403,"column_start":1,"column_end":18}},{"value":"! #       Timer6","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12697,"byte_end":12715,"line_start":404,"line_end":404,"column_start":1,"column_end":19}},{"value":"!     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12716,"byte_end":12726,"line_start":405,"line_end":405,"column_start":1,"column_end":11}},{"value":"!     let mut serial: Serial1 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12727,"byte_end":12762,"line_start":406,"line_end":406,"column_start":1,"column_end":36}},{"value":"!         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12763,"byte_end":12780,"line_start":407,"line_end":407,"column_start":1,"column_end":18}},{"value":"! #       Serial1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12781,"byte_end":12800,"line_start":408,"line_end":408,"column_start":1,"column_end":20}},{"value":"!     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12801,"byte_end":12811,"line_start":409,"line_end":409,"column_start":1,"column_end":11}},{"value":"!     let mut led: Led = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":410,"line_end":410,"column_start":1,"column_end":29}},{"value":"!         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12841,"byte_end":12858,"line_start":411,"line_end":411,"column_start":1,"column_end":18}},{"value":"! #       Led","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12859,"byte_end":12874,"line_start":412,"line_end":412,"column_start":1,"column_end":16}},{"value":"!     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12875,"byte_end":12885,"line_start":413,"line_end":413,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12886,"byte_end":12889,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"!     // Tasks","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12890,"byte_end":12906,"line_start":415,"line_end":415,"column_start":1,"column_end":17}},{"value":"!     let mut blinky = (move || {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12907,"byte_end":12942,"line_start":416,"line_end":416,"column_start":1,"column_end":36}},{"value":"!         let mut state = false;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12943,"byte_end":12977,"line_start":417,"line_end":417,"column_start":1,"column_end":35}},{"value":"!         loop {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12978,"byte_end":12996,"line_start":418,"line_end":418,"column_start":1,"column_end":19}},{"value":"!             // `await!` means \"suspend / yield here\" instead of \"block until","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":12997,"byte_end":13077,"line_start":419,"line_end":419,"column_start":1,"column_end":81}},{"value":"!             // completion\"","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13078,"byte_end":13108,"line_start":420,"line_end":420,"column_start":1,"column_end":31}},{"value":"!             await!(timer.wait()).unwrap(); // NOTE(unwrap) E = Void","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13109,"byte_end":13180,"line_start":421,"line_end":421,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13181,"byte_end":13184,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"!             state = !state;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13185,"byte_end":13216,"line_start":423,"line_end":423,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13217,"byte_end":13220,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"!             if state {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13221,"byte_end":13247,"line_start":425,"line_end":425,"column_start":1,"column_end":27}},{"value":"!                 led.on();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13248,"byte_end":13277,"line_start":426,"line_end":426,"column_start":1,"column_end":30}},{"value":"!             } else {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13278,"byte_end":13302,"line_start":427,"line_end":427,"column_start":1,"column_end":25}},{"value":"!                 led.off();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13303,"byte_end":13333,"line_start":428,"line_end":428,"column_start":1,"column_end":31}},{"value":"!             }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13334,"byte_end":13351,"line_start":429,"line_end":429,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13352,"byte_end":13365,"line_start":430,"line_end":430,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13366,"byte_end":13377,"line_start":431,"line_end":431,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13378,"byte_end":13381,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"!     let mut loopback = (move || {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13382,"byte_end":13419,"line_start":433,"line_end":433,"column_start":1,"column_end":38}},{"value":"!         loop {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13420,"byte_end":13438,"line_start":434,"line_end":434,"column_start":1,"column_end":19}},{"value":"!             let byte = await!(serial.read()).unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13439,"byte_end":13497,"line_start":435,"line_end":435,"column_start":1,"column_end":59}},{"value":"!             await!(serial.write(byte)).unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13498,"byte_end":13550,"line_start":436,"line_end":436,"column_start":1,"column_end":53}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13551,"byte_end":13564,"line_start":437,"line_end":437,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13565,"byte_end":13576,"line_start":438,"line_end":438,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13577,"byte_end":13580,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"!     // Event loop","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13581,"byte_end":13602,"line_start":440,"line_end":440,"column_start":1,"column_end":22}},{"value":"!     loop {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13603,"byte_end":13617,"line_start":441,"line_end":441,"column_start":1,"column_end":15}},{"value":"!         Pin::new(&mut blinky).resume();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13618,"byte_end":13661,"line_start":442,"line_end":442,"column_start":1,"column_end":44}},{"value":"!         Pin::new(&mut loopback).resume();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13662,"byte_end":13707,"line_start":443,"line_end":443,"column_start":1,"column_end":46}},{"value":"!         # break;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13708,"byte_end":13728,"line_start":444,"line_end":444,"column_start":1,"column_end":21}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13729,"byte_end":13738,"line_start":445,"line_end":445,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13739,"byte_end":13744,"line_start":446,"line_end":446,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13745,"byte_end":13748,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"! # mod stm32f30x_hal {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13749,"byte_end":13774,"line_start":448,"line_end":448,"column_start":1,"column_end":26}},{"value":"! #   extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13775,"byte_end":13801,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"! #   use self::void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13802,"byte_end":13831,"line_start":450,"line_end":450,"column_start":1,"column_end":30}},{"value":"! #   pub struct Serial1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13832,"byte_end":13859,"line_start":451,"line_end":451,"column_start":1,"column_end":28}},{"value":"! #   impl Serial1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13860,"byte_end":13882,"line_start":452,"line_end":452,"column_start":1,"column_end":23}},{"value":"! #       pub fn read(&mut self) -> ::nb::Result<u8, Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13883,"byte_end":13976,"line_start":453,"line_end":453,"column_start":1,"column_end":94}},{"value":"! #       pub fn write(&mut self, _: u8) -> ::nb::Result<(), Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":13977,"byte_end":14078,"line_start":454,"line_end":454,"column_start":1,"column_end":102}},{"value":"! #   }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14079,"byte_end":14088,"line_start":455,"line_end":455,"column_start":1,"column_end":10}},{"value":"! #   pub struct Timer6;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14089,"byte_end":14115,"line_start":456,"line_end":456,"column_start":1,"column_end":27}},{"value":"! #   impl Timer6 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14116,"byte_end":14137,"line_start":457,"line_end":457,"column_start":1,"column_end":22}},{"value":"! #       pub fn wait(&mut self) -> ::nb::Result<(), Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14138,"byte_end":14231,"line_start":458,"line_end":458,"column_start":1,"column_end":94}},{"value":"! #   }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14232,"byte_end":14241,"line_start":459,"line_end":459,"column_start":1,"column_end":10}},{"value":"! #   pub struct Led;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14242,"byte_end":14265,"line_start":460,"line_end":460,"column_start":1,"column_end":24}},{"value":"! #   impl Led {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14266,"byte_end":14284,"line_start":461,"line_end":461,"column_start":1,"column_end":19}},{"value":"! #       pub fn off(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14285,"byte_end":14321,"line_start":462,"line_end":462,"column_start":1,"column_end":37}},{"value":"! #       pub fn on(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14322,"byte_end":14357,"line_start":463,"line_end":463,"column_start":1,"column_end":36}},{"value":"! #   }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14358,"byte_end":14367,"line_start":464,"line_end":464,"column_start":1,"column_end":10}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14368,"byte_end":14375,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14376,"byte_end":14383,"line_start":466,"line_end":466,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14384,"byte_end":14387,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"! ## Generic programming and higher level abstractions","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14388,"byte_end":14444,"line_start":468,"line_end":468,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14445,"byte_end":14448,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"! The core of the HAL has been kept minimal on purpose to encourage building **generic** higher","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14449,"byte_end":14546,"line_start":470,"line_end":470,"column_start":1,"column_end":98}},{"value":"! level abstractions on top of it. Some higher level abstractions that pick an asynchronous model","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14547,"byte_end":14646,"line_start":471,"line_end":471,"column_start":1,"column_end":100}},{"value":"! or that have blocking behavior and that are deemed useful to build other abstractions can be","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14647,"byte_end":14743,"line_start":472,"line_end":472,"column_start":1,"column_end":97}},{"value":"! found in the `blocking` module and, in the future, in the `futures` and `async` modules.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14744,"byte_end":14836,"line_start":473,"line_end":473,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14837,"byte_end":14840,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"! Some examples:","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14841,"byte_end":14859,"line_start":475,"line_end":475,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14860,"byte_end":14863,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"! **NOTE** All the functions shown below could have been written as trait","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14864,"byte_end":14939,"line_start":477,"line_end":477,"column_start":1,"column_end":76}},{"value":"! methods with default implementation to allow specialization, but they have","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":14940,"byte_end":15018,"line_start":478,"line_end":478,"column_start":1,"column_end":79}},{"value":"! been written as functions to keep things simple.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15019,"byte_end":15071,"line_start":479,"line_end":479,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15072,"byte_end":15075,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"! - Write a whole buffer to a serial device in blocking a fashion.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15076,"byte_end":15144,"line_start":481,"line_end":481,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15145,"byte_end":15148,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15149,"byte_end":15156,"line_start":483,"line_end":483,"column_start":1,"column_end":8}},{"value":"! extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15157,"byte_end":15194,"line_start":484,"line_end":484,"column_start":1,"column_end":38}},{"value":"! #[macro_use(block)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15195,"byte_end":15218,"line_start":485,"line_end":485,"column_start":1,"column_end":24}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15219,"byte_end":15239,"line_start":486,"line_end":486,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15240,"byte_end":15243,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"! use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15244,"byte_end":15268,"line_start":488,"line_end":488,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15269,"byte_end":15272,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"! fn write_all<S>(serial: &mut S, buffer: &[u8]) -> Result<(), S::Error>","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15273,"byte_end":15347,"line_start":490,"line_end":490,"column_start":1,"column_end":75}},{"value":"! where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15348,"byte_end":15357,"line_start":491,"line_end":491,"column_start":1,"column_end":10}},{"value":"!     S: hal::serial::Write<u8>","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15358,"byte_end":15391,"line_start":492,"line_end":492,"column_start":1,"column_end":34}},{"value":"! {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15392,"byte_end":15397,"line_start":493,"line_end":493,"column_start":1,"column_end":6}},{"value":"!     for &byte in buffer {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15398,"byte_end":15427,"line_start":494,"line_end":494,"column_start":1,"column_end":30}},{"value":"!         block!(serial.write(byte))?;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15428,"byte_end":15468,"line_start":495,"line_end":495,"column_start":1,"column_end":41}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15469,"byte_end":15478,"line_start":496,"line_end":496,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15479,"byte_end":15482,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15483,"byte_end":15497,"line_start":498,"line_end":498,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15498,"byte_end":15503,"line_start":499,"line_end":499,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15504,"byte_end":15507,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"! # fn main() {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15508,"byte_end":15526,"line_start":501,"line_end":501,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15527,"byte_end":15534,"line_start":502,"line_end":502,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15535,"byte_end":15538,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"! - Blocking serial read with timeout","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15539,"byte_end":15578,"line_start":504,"line_end":504,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15579,"byte_end":15582,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15583,"byte_end":15590,"line_start":506,"line_end":506,"column_start":1,"column_end":8}},{"value":"! extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15591,"byte_end":15628,"line_start":507,"line_end":507,"column_start":1,"column_end":38}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15629,"byte_end":15649,"line_start":508,"line_end":508,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15650,"byte_end":15653,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"! use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15654,"byte_end":15678,"line_start":510,"line_end":510,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15679,"byte_end":15682,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"! enum Error<E> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15683,"byte_end":15702,"line_start":512,"line_end":512,"column_start":1,"column_end":20}},{"value":"!     /// Serial interface error","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15703,"byte_end":15737,"line_start":513,"line_end":513,"column_start":1,"column_end":35}},{"value":"!     Serial(E),","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15738,"byte_end":15756,"line_start":514,"line_end":514,"column_start":1,"column_end":19}},{"value":"!     TimedOut,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15757,"byte_end":15774,"line_start":515,"line_end":515,"column_start":1,"column_end":18}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15775,"byte_end":15780,"line_start":516,"line_end":516,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15781,"byte_end":15784,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"! fn read_with_timeout<S, T>(","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15785,"byte_end":15816,"line_start":518,"line_end":518,"column_start":1,"column_end":32}},{"value":"!     serial: &mut S,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15817,"byte_end":15840,"line_start":519,"line_end":519,"column_start":1,"column_end":24}},{"value":"!     timer: &mut T,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15841,"byte_end":15863,"line_start":520,"line_end":520,"column_start":1,"column_end":23}},{"value":"!     timeout: T::Time,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15864,"byte_end":15889,"line_start":521,"line_end":521,"column_start":1,"column_end":26}},{"value":"! ) -> Result<u8, Error<S::Error>>","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15890,"byte_end":15926,"line_start":522,"line_end":522,"column_start":1,"column_end":37}},{"value":"! where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15927,"byte_end":15936,"line_start":523,"line_end":523,"column_start":1,"column_end":10}},{"value":"!     T: hal::timer::CountDown,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15937,"byte_end":15970,"line_start":524,"line_end":524,"column_start":1,"column_end":34}},{"value":"!     S: hal::serial::Read<u8>,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":15971,"byte_end":16004,"line_start":525,"line_end":525,"column_start":1,"column_end":34}},{"value":"! {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16005,"byte_end":16010,"line_start":526,"line_end":526,"column_start":1,"column_end":6}},{"value":"!     timer.start(timeout);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16011,"byte_end":16040,"line_start":527,"line_end":527,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16041,"byte_end":16044,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16045,"byte_end":16059,"line_start":529,"line_end":529,"column_start":1,"column_end":15}},{"value":"!         match serial.read() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16060,"byte_end":16093,"line_start":530,"line_end":530,"column_start":1,"column_end":34}},{"value":"!             // raise error","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16094,"byte_end":16124,"line_start":531,"line_end":531,"column_start":1,"column_end":31}},{"value":"!             Err(nb::Error::Other(e)) => return Err(Error::Serial(e)),","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16125,"byte_end":16198,"line_start":532,"line_end":532,"column_start":1,"column_end":74}},{"value":"!             Err(nb::Error::WouldBlock) => {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16199,"byte_end":16246,"line_start":533,"line_end":533,"column_start":1,"column_end":48}},{"value":"!                 // no data available yet, check the timer below","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16247,"byte_end":16314,"line_start":534,"line_end":534,"column_start":1,"column_end":68}},{"value":"!             },","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16315,"byte_end":16333,"line_start":535,"line_end":535,"column_start":1,"column_end":19}},{"value":"!             Ok(byte) => return Ok(byte),","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16334,"byte_end":16378,"line_start":536,"line_end":536,"column_start":1,"column_end":45}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16379,"byte_end":16392,"line_start":537,"line_end":537,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16393,"byte_end":16396,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"!         match timer.wait() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16397,"byte_end":16429,"line_start":539,"line_end":539,"column_start":1,"column_end":33}},{"value":"!             Err(nb::Error::Other(e)) => {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16430,"byte_end":16475,"line_start":540,"line_end":540,"column_start":1,"column_end":46}},{"value":"!                 // The error type specified by `timer.wait()` is `!`, which","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16476,"byte_end":16555,"line_start":541,"line_end":541,"column_start":1,"column_end":80}},{"value":"!                 // means no error can actually occur. The Rust compiler","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16556,"byte_end":16631,"line_start":542,"line_end":542,"column_start":1,"column_end":76}},{"value":"!                 // still forces us to provide this match arm, though.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16632,"byte_end":16705,"line_start":543,"line_end":543,"column_start":1,"column_end":74}},{"value":"!                 unreachable!()","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16706,"byte_end":16740,"line_start":544,"line_end":544,"column_start":1,"column_end":35}},{"value":"!             },","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16741,"byte_end":16759,"line_start":545,"line_end":545,"column_start":1,"column_end":19}},{"value":"!             // no timeout yet, try again","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16760,"byte_end":16804,"line_start":546,"line_end":546,"column_start":1,"column_end":45}},{"value":"!             Err(nb::Error::WouldBlock) => continue,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16805,"byte_end":16860,"line_start":547,"line_end":547,"column_start":1,"column_end":56}},{"value":"!             Ok(()) => return Err(Error::TimedOut),","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16861,"byte_end":16915,"line_start":548,"line_end":548,"column_start":1,"column_end":55}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16916,"byte_end":16929,"line_start":549,"line_end":549,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16930,"byte_end":16939,"line_start":550,"line_end":550,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16940,"byte_end":16945,"line_start":551,"line_end":551,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16946,"byte_end":16949,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"! # fn main() {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16950,"byte_end":16968,"line_start":553,"line_end":553,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16969,"byte_end":16976,"line_start":554,"line_end":554,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16977,"byte_end":16980,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"! - Asynchronous SPI transfer","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":16981,"byte_end":17012,"line_start":556,"line_end":556,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17013,"byte_end":17016,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17017,"byte_end":17024,"line_start":558,"line_end":558,"column_start":1,"column_end":8}},{"value":"! #![feature(conservative_impl_trait)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17025,"byte_end":17065,"line_start":559,"line_end":559,"column_start":1,"column_end":41}},{"value":"! #![feature(generators)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17066,"byte_end":17093,"line_start":560,"line_end":560,"column_start":1,"column_end":28}},{"value":"! #![feature(generator_trait)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17094,"byte_end":17126,"line_start":561,"line_end":561,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17127,"byte_end":17130,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"! extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17131,"byte_end":17168,"line_start":563,"line_end":563,"column_start":1,"column_end":38}},{"value":"! #[macro_use(await)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17169,"byte_end":17192,"line_start":564,"line_end":564,"column_start":1,"column_end":24}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17193,"byte_end":17213,"line_start":565,"line_end":565,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17214,"byte_end":17217,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"! use std::ops::Generator;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17218,"byte_end":17246,"line_start":567,"line_end":567,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17247,"byte_end":17250,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"! /// Transfers a byte buffer of size N","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17251,"byte_end":17292,"line_start":569,"line_end":569,"column_start":1,"column_end":42}},{"value":"! ///","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17293,"byte_end":17300,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"! /// Returns the same byte buffer but filled with the data received from the","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17301,"byte_end":17380,"line_start":571,"line_end":571,"column_start":1,"column_end":80}},{"value":"! /// slave device","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17381,"byte_end":17401,"line_start":572,"line_end":572,"column_start":1,"column_end":21}},{"value":"! fn transfer<S, B>(","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17402,"byte_end":17424,"line_start":573,"line_end":573,"column_start":1,"column_end":23}},{"value":"!     mut spi: S,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17425,"byte_end":17444,"line_start":574,"line_end":574,"column_start":1,"column_end":20}},{"value":"!     mut buffer: [u8; 16], // NOTE this should be generic over the size of the array","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17445,"byte_end":17532,"line_start":575,"line_end":575,"column_start":1,"column_end":88}},{"value":"! ) -> impl Generator<Return = Result<(S, [u8; 16]), S::Error>, Yield = ()>","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17533,"byte_end":17610,"line_start":576,"line_end":576,"column_start":1,"column_end":78}},{"value":"! where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17611,"byte_end":17620,"line_start":577,"line_end":577,"column_start":1,"column_end":10}},{"value":"!     S: hal::spi::FullDuplex<u8>,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17621,"byte_end":17657,"line_start":578,"line_end":578,"column_start":1,"column_end":37}},{"value":"! {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17658,"byte_end":17663,"line_start":579,"line_end":579,"column_start":1,"column_end":6}},{"value":"!     move || {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17664,"byte_end":17681,"line_start":580,"line_end":580,"column_start":1,"column_end":18}},{"value":"!         let n = buffer.len();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17682,"byte_end":17715,"line_start":581,"line_end":581,"column_start":1,"column_end":34}},{"value":"!         for i in 0..n {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17716,"byte_end":17743,"line_start":582,"line_end":582,"column_start":1,"column_end":28}},{"value":"!             await!(spi.send(buffer[i]))?;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17744,"byte_end":17789,"line_start":583,"line_end":583,"column_start":1,"column_end":46}},{"value":"!             buffer[i] = await!(spi.read())?;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17790,"byte_end":17838,"line_start":584,"line_end":584,"column_start":1,"column_end":49}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17839,"byte_end":17852,"line_start":585,"line_end":585,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17853,"byte_end":17856,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"!         Ok((spi, buffer))","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17857,"byte_end":17886,"line_start":587,"line_end":587,"column_start":1,"column_end":30}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17887,"byte_end":17896,"line_start":588,"line_end":588,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17897,"byte_end":17902,"line_start":589,"line_end":589,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17903,"byte_end":17906,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"! # fn main() {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17907,"byte_end":17925,"line_start":591,"line_end":591,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17926,"byte_end":17933,"line_start":592,"line_end":592,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17934,"byte_end":17937,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"! - Buffered serial interface with periodic flushing in interrupt handler","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":17938,"byte_end":18013,"line_start":594,"line_end":594,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18014,"byte_end":18017,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18018,"byte_end":18025,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"! extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18026,"byte_end":18063,"line_start":597,"line_end":597,"column_start":1,"column_end":38}},{"value":"! extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18064,"byte_end":18084,"line_start":598,"line_end":598,"column_start":1,"column_end":21}},{"value":"! extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18085,"byte_end":18107,"line_start":599,"line_end":599,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18108,"byte_end":18111,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"! use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18112,"byte_end":18136,"line_start":601,"line_end":601,"column_start":1,"column_end":25}},{"value":"! use void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18137,"byte_end":18156,"line_start":602,"line_end":602,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18157,"byte_end":18160,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"! fn flush<S>(serial: &mut S, cb: &mut CircularBuffer)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18161,"byte_end":18217,"line_start":604,"line_end":604,"column_start":1,"column_end":57}},{"value":"! where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18218,"byte_end":18227,"line_start":605,"line_end":605,"column_start":1,"column_end":10}},{"value":"!     S: hal::serial::Write<u8, Error = Void>,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18228,"byte_end":18276,"line_start":606,"line_end":606,"column_start":1,"column_end":49}},{"value":"! {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18277,"byte_end":18282,"line_start":607,"line_end":607,"column_start":1,"column_end":6}},{"value":"!     loop {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18283,"byte_end":18297,"line_start":608,"line_end":608,"column_start":1,"column_end":15}},{"value":"!         if let Some(byte) = cb.peek() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18298,"byte_end":18341,"line_start":609,"line_end":609,"column_start":1,"column_end":44}},{"value":"!             match serial.write(*byte) {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18342,"byte_end":18385,"line_start":610,"line_end":610,"column_start":1,"column_end":44}},{"value":"!                 Err(nb::Error::Other(_)) => unreachable!(),","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18386,"byte_end":18449,"line_start":611,"line_end":611,"column_start":1,"column_end":64}},{"value":"!                 Err(nb::Error::WouldBlock) => return,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18450,"byte_end":18507,"line_start":612,"line_end":612,"column_start":1,"column_end":58}},{"value":"!                 Ok(()) => {}, // keep flushing data","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18508,"byte_end":18563,"line_start":613,"line_end":613,"column_start":1,"column_end":56}},{"value":"!             }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18564,"byte_end":18581,"line_start":614,"line_end":614,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18582,"byte_end":18595,"line_start":615,"line_end":615,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18596,"byte_end":18599,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"!         cb.pop();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18600,"byte_end":18621,"line_start":617,"line_end":617,"column_start":1,"column_end":22}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18622,"byte_end":18631,"line_start":618,"line_end":618,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18632,"byte_end":18637,"line_start":619,"line_end":619,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18638,"byte_end":18641,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"! // The stuff below could be in some other crate","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18642,"byte_end":18693,"line_start":621,"line_end":621,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18694,"byte_end":18697,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"! /// Global singleton","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18698,"byte_end":18722,"line_start":623,"line_end":623,"column_start":1,"column_end":25}},{"value":"! pub struct BufferedSerial1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18723,"byte_end":18754,"line_start":624,"line_end":624,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18755,"byte_end":18758,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"! // NOTE private","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18759,"byte_end":18778,"line_start":626,"line_end":626,"column_start":1,"column_end":20}},{"value":"! static BUFFER1: Mutex<CircularBuffer> = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18779,"byte_end":18824,"line_start":627,"line_end":627,"column_start":1,"column_end":46}},{"value":"!     // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18825,"byte_end":18838,"line_start":628,"line_end":628,"column_start":1,"column_end":14}},{"value":"! #   Mutex(CircularBuffer)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18839,"byte_end":18868,"line_start":629,"line_end":629,"column_start":1,"column_end":30}},{"value":"! };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18869,"byte_end":18875,"line_start":630,"line_end":630,"column_start":1,"column_end":7}},{"value":"! static SERIAL1: Mutex<Serial1> = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18876,"byte_end":18914,"line_start":631,"line_end":631,"column_start":1,"column_end":39}},{"value":"!     // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18915,"byte_end":18928,"line_start":632,"line_end":632,"column_start":1,"column_end":14}},{"value":"! #   Mutex(Serial1)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18929,"byte_end":18951,"line_start":633,"line_end":633,"column_start":1,"column_end":23}},{"value":"! };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18952,"byte_end":18958,"line_start":634,"line_end":634,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18959,"byte_end":18962,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"! impl BufferedSerial1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18963,"byte_end":18989,"line_start":636,"line_end":636,"column_start":1,"column_end":27}},{"value":"!     pub fn write(&self, byte: u8) {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":18990,"byte_end":19029,"line_start":637,"line_end":637,"column_start":1,"column_end":40}},{"value":"!         self.write_all(&[byte])","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19030,"byte_end":19065,"line_start":638,"line_end":638,"column_start":1,"column_end":36}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19066,"byte_end":19075,"line_start":639,"line_end":639,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19076,"byte_end":19079,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"!     pub fn write_all(&self, bytes: &[u8]) {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19080,"byte_end":19127,"line_start":641,"line_end":641,"column_start":1,"column_end":48}},{"value":"!         let mut buffer = BUFFER1.lock();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19128,"byte_end":19172,"line_start":642,"line_end":642,"column_start":1,"column_end":45}},{"value":"!         for byte in bytes {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19173,"byte_end":19204,"line_start":643,"line_end":643,"column_start":1,"column_end":32}},{"value":"!             buffer.push(*byte).expect(\"buffer overrun\");","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19205,"byte_end":19265,"line_start":644,"line_end":644,"column_start":1,"column_end":61}},{"value":"!         }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19266,"byte_end":19279,"line_start":645,"line_end":645,"column_start":1,"column_end":14}},{"value":"!         // omitted: pend / enable interrupt_handler","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19280,"byte_end":19335,"line_start":646,"line_end":646,"column_start":1,"column_end":56}},{"value":"!     }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19336,"byte_end":19345,"line_start":647,"line_end":647,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19346,"byte_end":19351,"line_start":648,"line_end":648,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19352,"byte_end":19355,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"! fn interrupt_handler() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19356,"byte_end":19384,"line_start":650,"line_end":650,"column_start":1,"column_end":29}},{"value":"!     let mut serial = SERIAL1.lock();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19385,"byte_end":19425,"line_start":651,"line_end":651,"column_start":1,"column_end":41}},{"value":"!     let mut buffer = BUFFER1.lock();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19426,"byte_end":19466,"line_start":652,"line_end":652,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19467,"byte_end":19470,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"!     flush(&mut *serial, &mut buffer);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19471,"byte_end":19512,"line_start":654,"line_end":654,"column_start":1,"column_end":42}},{"value":"! }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19513,"byte_end":19518,"line_start":655,"line_end":655,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19519,"byte_end":19522,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"! # struct Mutex<T>(T);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19523,"byte_end":19548,"line_start":657,"line_end":657,"column_start":1,"column_end":26}},{"value":"! # impl<T> Mutex<T> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19549,"byte_end":19573,"line_start":658,"line_end":658,"column_start":1,"column_end":25}},{"value":"! #     fn lock(&self) -> RefMut<T> { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19574,"byte_end":19632,"line_start":659,"line_end":659,"column_start":1,"column_end":59}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19633,"byte_end":19640,"line_start":660,"line_end":660,"column_start":1,"column_end":8}},{"value":"! # struct RefMut<'a, T>(&'a mut T) where T: 'a;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19641,"byte_end":19691,"line_start":661,"line_end":661,"column_start":1,"column_end":51}},{"value":"! # impl<'a, T> ::std::ops::Deref for RefMut<'a, T> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19692,"byte_end":19747,"line_start":662,"line_end":662,"column_start":1,"column_end":56}},{"value":"! #     type Target = T;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19748,"byte_end":19774,"line_start":663,"line_end":663,"column_start":1,"column_end":27}},{"value":"! #     fn deref(&self) -> &T { self.0 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19775,"byte_end":19817,"line_start":664,"line_end":664,"column_start":1,"column_end":43}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19818,"byte_end":19825,"line_start":665,"line_end":665,"column_start":1,"column_end":8}},{"value":"! # impl<'a, T> ::std::ops::DerefMut for RefMut<'a, T> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19826,"byte_end":19884,"line_start":666,"line_end":666,"column_start":1,"column_end":59}},{"value":"! #     fn deref_mut(&mut self) -> &mut T { self.0 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19885,"byte_end":19939,"line_start":667,"line_end":667,"column_start":1,"column_end":55}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19940,"byte_end":19947,"line_start":668,"line_end":668,"column_start":1,"column_end":8}},{"value":"! # struct Serial1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19948,"byte_end":19969,"line_start":669,"line_end":669,"column_start":1,"column_end":22}},{"value":"! # impl ::hal::serial::Write<u8> for Serial1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":19970,"byte_end":20019,"line_start":670,"line_end":670,"column_start":1,"column_end":50}},{"value":"! #   type Error = Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20020,"byte_end":20046,"line_start":671,"line_end":671,"column_start":1,"column_end":27}},{"value":"! #   fn write(&mut self, _: u8) -> nb::Result<(), Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20047,"byte_end":20138,"line_start":672,"line_end":672,"column_start":1,"column_end":92}},{"value":"! #   fn flush(&mut self) -> nb::Result<(), Void> { Err(::nb::Error::WouldBlock) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20139,"byte_end":20223,"line_start":673,"line_end":673,"column_start":1,"column_end":85}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20224,"byte_end":20231,"line_start":674,"line_end":674,"column_start":1,"column_end":8}},{"value":"! # struct CircularBuffer;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20232,"byte_end":20260,"line_start":675,"line_end":675,"column_start":1,"column_end":29}},{"value":"! # impl CircularBuffer {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20261,"byte_end":20288,"line_start":676,"line_end":676,"column_start":1,"column_end":28}},{"value":"! #   pub fn peek(&mut self) -> Option<&u8> { None }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20289,"byte_end":20343,"line_start":677,"line_end":677,"column_start":1,"column_end":55}},{"value":"! #   pub fn pop(&mut self) -> Option<u8> { None }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20344,"byte_end":20396,"line_start":678,"line_end":678,"column_start":1,"column_end":53}},{"value":"! #   pub fn push(&mut self, _: u8) -> Result<(), ()> { Ok(()) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20397,"byte_end":20463,"line_start":679,"line_end":679,"column_start":1,"column_end":67}},{"value":"! # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20464,"byte_end":20471,"line_start":680,"line_end":680,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20472,"byte_end":20475,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"! # fn main() {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20476,"byte_end":20494,"line_start":682,"line_end":682,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20495,"byte_end":20502,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20504,"byte_end":20526,"line_start":685,"line_end":685,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20527,"byte_end":20545,"line_start":686,"line_end":686,"column_start":1,"column_end":19}},{"value":"no_std","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20546,"byte_end":20556,"line_start":687,"line_end":687,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adc","qualname":"::adc","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":12}],"decl_id":null,"docs":" Analog-digital conversion traits\n","sig":null,"attributes":[{"value":"! Analog-digital conversion traits","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29399,"byte_end":29435,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30942,"byte_end":30949,"line_start":39,"line_end":39,"column_start":11,"column_end":18},"name":"Channel","qualname":"::adc::Channel","value":"Channel<ADC>","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" A marker trait to identify MCU pins that can be used as inputs to an ADC channel.","sig":null,"attributes":[{"value":"/ A marker trait to identify MCU pins that can be used as inputs to an ADC channel.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29475,"byte_end":29560,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29561,"byte_end":29564,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This marker trait denotes an object, i.e. a GPIO pin, that is ready for use as an input to the","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29565,"byte_end":29663,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ ADC. As ADCs channels can be supplied by multiple pins, this trait defines the relationship","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29664,"byte_end":29759,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ between the physical interface and the ADC sampling buffer.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29760,"byte_end":29823,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29824,"byte_end":29827,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29828,"byte_end":29835,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29836,"byte_end":29871,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/ # use embedded_hal::adc::Channel;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29872,"byte_end":29909,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29910,"byte_end":29913,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ struct Adc1; // Example ADC with single bank of 8 channels","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29914,"byte_end":29976,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ struct Gpio1Pin1<MODE>(PhantomData<MODE>);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":29977,"byte_end":30023,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/ struct Analog(()); // marker type to denote a pin in \"analog\" mode","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30024,"byte_end":30094,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30095,"byte_end":30098,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // GPIO 1 pin 1 can supply an ADC channel when it is configured in Analog mode","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30099,"byte_end":30181,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ impl Channel<Adc1> for Gpio1Pin1<Analog> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30182,"byte_end":30228,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/     type ID = u8; // ADC channels are identified numerically","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30229,"byte_end":30293,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30294,"byte_end":30297,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     fn channel() -> u8 { 7_u8 } // GPIO pin 1 is connected to ADC channel 7","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30298,"byte_end":30377,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30378,"byte_end":30383,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30384,"byte_end":30387,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ struct Adc2; // ADC with two banks of 16 channels","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30388,"byte_end":30441,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ struct Gpio2PinA<MODE>(PhantomData<MODE>);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30442,"byte_end":30488,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ struct AltFun(()); // marker type to denote some alternate function mode for the pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30489,"byte_end":30577,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30578,"byte_end":30581,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // GPIO 2 pin A can supply an ADC channel when it's configured in some alternate function mode","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30582,"byte_end":30680,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ impl Channel<Adc2> for Gpio2PinA<AltFun> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30681,"byte_end":30727,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/     type ID = (u8, u8); // ADC channels are identified by bank number and channel number","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30728,"byte_end":30820,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30821,"byte_end":30824,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     fn channel() -> (u8, u8) { (0, 3) } // bank 0 channel 3","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30825,"byte_end":30888,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30889,"byte_end":30894,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30895,"byte_end":30902,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30903,"byte_end":30931,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":10},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31232,"byte_end":31234,"line_start":45,"line_end":45,"column_start":10,"column_end":12},"name":"ID","qualname":"::adc::Channel::ID","value":"type ID;","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Channel ID type","sig":null,"attributes":[{"value":"/ Channel ID type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30961,"byte_end":30980,"line_start":40,"line_end":40,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30985,"byte_end":30988,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ A type used to identify this ADC channel. For example, if the ADC has eight channels, this","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":30993,"byte_end":31087,"line_start":42,"line_end":42,"column_start":5,"column_end":99}},{"value":"/ might be a `u8`. If the ADC has multiple banks of channels, it could be a tuple, like","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31092,"byte_end":31181,"line_start":43,"line_end":43,"column_start":5,"column_end":94}},{"value":"/ `(u8: bank_id, u8: channel_id)`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31186,"byte_end":31222,"line_start":44,"line_end":44,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31375,"byte_end":31382,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"channel","qualname":"::adc::Channel::channel","value":"fn () -> Self::ID","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Get the specific ID that identifies this channel, for example `0_u8` for the first ADC\n channel, if Self::ID is u8.\n","sig":null,"attributes":[{"value":"/ Get the specific ID that identifies this channel, for example `0_u8` for the first ADC","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31241,"byte_end":31331,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/ channel, if Self::ID is u8.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31336,"byte_end":31367,"line_start":48,"line_end":48,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32695,"byte_end":32702,"line_start":89,"line_end":89,"column_start":11,"column_end":18},"name":"OneShot","qualname":"::adc::OneShot","value":"OneShot<ADC, Word, Pin: Channel<ADC>>","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" ADCs that sample on single channels per request, and do so at the time of the request.","sig":null,"attributes":[{"value":"/ ADCs that sample on single channels per request, and do so at the time of the request.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31653,"byte_end":31743,"line_start":57,"line_end":57,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31744,"byte_end":31747,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This trait is the interface to an ADC that is configured to read a specific channel at the time","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31748,"byte_end":31847,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"/ of the request (in contrast to continuous asynchronous sampling).","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31848,"byte_end":31917,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31918,"byte_end":31921,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31922,"byte_end":31929,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use embedded_hal::adc::{Channel, OneShot};","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31930,"byte_end":31976,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31977,"byte_end":31980,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ struct MyAdc; // 10-bit ADC, with 5 channels","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":31981,"byte_end":32029,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"/ # impl MyAdc {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32030,"byte_end":32048,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ #     pub fn power_up(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32049,"byte_end":32088,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #     pub fn power_down(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32089,"byte_end":32130,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ #     pub fn do_conversion(&mut self, chan: u8) -> u16 { 0xAA55_u16 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32131,"byte_end":32204,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32205,"byte_end":32212,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32213,"byte_end":32216,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ impl<WORD, PIN> OneShot<MyAdc, WORD, PIN> for MyAdc","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32217,"byte_end":32272,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32273,"byte_end":32282,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/    WORD: From<u16>,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32283,"byte_end":32306,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/    PIN: Channel<MyAdc, ID=u8>,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32307,"byte_end":32341,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/ {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32342,"byte_end":32347,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/    type Error = ();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32348,"byte_end":32371,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32372,"byte_end":32375,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/    fn read(&mut self, _pin: &mut PIN) -> nb::Result<WORD, Self::Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32376,"byte_end":32452,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/        let chan = 1 << PIN::channel();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32453,"byte_end":32495,"line_start":80,"line_end":80,"column_start":1,"column_end":43}},{"value":"/        self.power_up();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32496,"byte_end":32523,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/        let result = self.do_conversion(chan);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32524,"byte_end":32573,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/        self.power_down();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32574,"byte_end":32603,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/        Ok(result.into())","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32604,"byte_end":32632,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32633,"byte_end":32641,"line_start":85,"line_end":85,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32642,"byte_end":32647,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32648,"byte_end":32655,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32656,"byte_end":32684,"line_start":88,"line_end":88,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32787,"byte_end":32792,"line_start":91,"line_end":91,"column_start":10,"column_end":15},"name":"Error","qualname":"::adc::OneShot::Error","value":"type Error;","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Error type returned by ADC methods\n","sig":null,"attributes":[{"value":"/ Error type returned by ADC methods","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32739,"byte_end":32777,"line_start":90,"line_end":90,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":33022,"byte_end":33026,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"read","qualname":"::adc::OneShot::read","value":"fn (&mut self, pin: &mut Pin) -> nb::Result<Word, Self::Error>","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Request that the ADC begin a conversion on the specified pin","sig":null,"attributes":[{"value":"/ Request that the ADC begin a conversion on the specified pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32799,"byte_end":32863,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32868,"byte_end":32871,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This method takes a `Pin` reference, as it is expected that the ADC will be able to sample","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32876,"byte_end":32970,"line_start":95,"line_end":95,"column_start":5,"column_end":99}},{"value":"/ whatever channel underlies the pin.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/adc.rs","byte_start":32975,"byte_end":33014,"line_start":96,"line_end":96,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blocking","qualname":"::blocking","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":26},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":63}],"decl_id":null,"docs":" Blocking API","sig":null,"attributes":[{"value":"! Blocking API","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33090,"byte_end":33106,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33107,"byte_end":33110,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! In some cases it's possible to implement these blocking traits on top of one of the core HAL","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33111,"byte_end":33207,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! traits. To save boilerplate when that's the case a `Default` marker trait may be provided.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33208,"byte_end":33302,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"! Implementing that marker trait will opt in your type into a blanket implementation.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33303,"byte_end":33390,"line_start":5,"line_end":5,"column_start":1,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::blocking::delay","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":23}],"decl_id":null,"docs":" Delays","sig":null,"attributes":[{"value":"! Delays","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33463,"byte_end":33473,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33474,"byte_end":33477,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # What's the difference between these traits and the `timer::CountDown` trait?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33478,"byte_end":33560,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33561,"byte_end":33564,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! The `Timer` trait provides a *non-blocking* timer abstraction and it's meant to be used to build","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33565,"byte_end":33665,"line_start":5,"line_end":5,"column_start":1,"column_end":101}},{"value":"! higher level abstractions like I/O operations with timeouts. OTOH, these delays traits only","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33666,"byte_end":33761,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"! provide *blocking* functionality. Note that you can also use the `timer::CountDown` trait to","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33762,"byte_end":33858,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"! implement blocking delays.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33859,"byte_end":33889,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34083,"byte_end":34090,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"DelayMs","qualname":"::blocking::delay::DelayMs","value":"DelayMs<UXX>","parent":null,"children":[{"krate":0,"index":22}],"decl_id":null,"docs":" Millisecond delay","sig":null,"attributes":[{"value":"/ Millisecond delay","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33891,"byte_end":33912,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33913,"byte_end":33916,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `UXX` denotes the range type of the delay time. `UXX` can be `u8`, `u16`, etc. A single type can","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":33917,"byte_end":34017,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/ implement this trait for different types of `UXX`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34018,"byte_end":34072,"line_start":13,"line_end":13,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34152,"byte_end":34160,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"delay_ms","qualname":"::blocking::delay::DelayMs::delay_ms","value":"fn (&mut self, ms: UXX) -> ()","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Pauses execution for `ms` milliseconds\n","sig":null,"attributes":[{"value":"/ Pauses execution for `ms` milliseconds","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34102,"byte_end":34144,"line_start":15,"line_end":15,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34377,"byte_end":34384,"line_start":23,"line_end":23,"column_start":11,"column_end":18},"name":"DelayUs","qualname":"::blocking::delay::DelayUs","value":"DelayUs<UXX>","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" Microsecond delay","sig":null,"attributes":[{"value":"/ Microsecond delay","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34185,"byte_end":34206,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34207,"byte_end":34210,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `UXX` denotes the range type of the delay time. `UXX` can be `u8`, `u16`, etc. A single type can","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34211,"byte_end":34311,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ implement this trait for different types of `UXX`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34312,"byte_end":34366,"line_start":22,"line_end":22,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34446,"byte_end":34454,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"delay_us","qualname":"::blocking::delay::DelayUs::delay_us","value":"fn (&mut self, us: UXX) -> ()","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Pauses execution for `us` microseconds\n","sig":null,"attributes":[{"value":"/ Pauses execution for `us` microseconds","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/delay.rs","byte_start":34396,"byte_end":34438,"line_start":24,"line_end":24,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::blocking::i2c","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":40}],"decl_id":null,"docs":" Blocking I2C API","sig":null,"attributes":[{"value":"! Blocking I2C API","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34479,"byte_end":34499,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34500,"byte_end":34503,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Slave addresses used by this API are 7-bit I2C addresses ranging from 0 to 127.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34504,"byte_end":34587,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34588,"byte_end":34591,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Operations on 10-bit slave addresses are not supported by the API yet (but applications might","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34592,"byte_end":34689,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"! be able to emulate some operations).","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34690,"byte_end":34730,"line_start":6,"line_end":6,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34760,"byte_end":34764,"line_start":9,"line_end":9,"column_start":11,"column_end":15},"name":"Read","qualname":"::blocking::i2c::Read","value":"Read","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":" Blocking read\n","sig":null,"attributes":[{"value":"/ Blocking read","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34732,"byte_end":34749,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34795,"byte_end":34800,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::i2c::Read::Error","value":"type Error;","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34771,"byte_end":34785,"line_start":10,"line_end":10,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35380,"byte_end":35384,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"read","qualname":"::blocking::i2c::Read::read","value":"fn (&mut self, address: u8, buffer: &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Reads enough bytes from slave with `address` to fill `buffer`","sig":null,"attributes":[{"value":"/ Reads enough bytes from slave with `address` to fill `buffer`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34807,"byte_end":34872,"line_start":13,"line_end":13,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34877,"byte_end":34880,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # I2C Events (contract)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34885,"byte_end":34912,"line_start":15,"line_end":15,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34917,"byte_end":34920,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ``` text","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34925,"byte_end":34937,"line_start":17,"line_end":17,"column_start":5,"column_end":17}},{"value":"/ Master: ST SAD+R        MAK    MAK ...    NMAK SP","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":34942,"byte_end":34995,"line_start":18,"line_end":18,"column_start":5,"column_end":58}},{"value":"/ Slave:           SAK B0     B1     ... BN","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35000,"byte_end":35045,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35050,"byte_end":35057,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35062,"byte_end":35065,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35070,"byte_end":35079,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35084,"byte_end":35087,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ - `ST` = start condition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35092,"byte_end":35120,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/ - `SAD+R` = slave address followed by bit 1 to indicate reading","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35125,"byte_end":35192,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/ - `SAK` = slave acknowledge","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35197,"byte_end":35228,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/ - `Bi` = ith byte of data","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35233,"byte_end":35262,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/ - `MAK` = master acknowledge","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35267,"byte_end":35299,"line_start":28,"line_end":28,"column_start":5,"column_end":37}},{"value":"/ - `NMAK` = master no acknowledge","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35304,"byte_end":35340,"line_start":29,"line_end":29,"column_start":5,"column_end":41}},{"value":"/ - `SP` = stop condition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35345,"byte_end":35372,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35488,"byte_end":35493,"line_start":35,"line_end":35,"column_start":11,"column_end":16},"name":"Write","qualname":"::blocking::i2c::Write","value":"Write","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":" Blocking write\n","sig":null,"attributes":[{"value":"/ Blocking write","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35459,"byte_end":35477,"line_start":34,"line_end":34,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":31},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35524,"byte_end":35529,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::i2c::Write::Error","value":"type Error;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35500,"byte_end":35514,"line_start":36,"line_end":36,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36013,"byte_end":36018,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"write","qualname":"::blocking::i2c::Write::write","value":"fn (&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Sends bytes to slave with address `addr`","sig":null,"attributes":[{"value":"/ Sends bytes to slave with address `addr`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35536,"byte_end":35580,"line_start":39,"line_end":39,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35585,"byte_end":35588,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # I2C Events (contract)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35593,"byte_end":35620,"line_start":41,"line_end":41,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35625,"byte_end":35628,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ``` text","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35633,"byte_end":35645,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/ Master: ST SAD+W     B0     B1     ... BN     SP","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35650,"byte_end":35702,"line_start":44,"line_end":44,"column_start":5,"column_end":57}},{"value":"/ Slave:           SAK    SAK    SAK ...    SAK","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35707,"byte_end":35756,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35761,"byte_end":35768,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35773,"byte_end":35776,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35781,"byte_end":35790,"line_start":48,"line_end":48,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35795,"byte_end":35798,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ - `ST` = start condition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35803,"byte_end":35831,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"/ - `SAD+W` = slave address followed by bit 0 to indicate writing","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35836,"byte_end":35903,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/ - `SAK` = slave acknowledge","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35908,"byte_end":35939,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/ - `Bi` = ith byte of data","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35944,"byte_end":35973,"line_start":53,"line_end":53,"column_start":5,"column_end":34}},{"value":"/ - `SP` = stop condition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":35978,"byte_end":36005,"line_start":54,"line_end":54,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36162,"byte_end":36171,"line_start":60,"line_end":60,"column_start":11,"column_end":20},"name":"WriteIter","qualname":"::blocking::i2c::WriteIter","value":"WriteIter","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" Blocking write (iterator version)\n","sig":null,"attributes":[{"value":"/ Blocking write (iterator version)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36085,"byte_end":36122,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36123,"byte_end":36151,"line_start":59,"line_end":59,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36202,"byte_end":36207,"line_start":62,"line_end":62,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::i2c::WriteIter::Error","value":"type Error;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36178,"byte_end":36192,"line_start":61,"line_end":61,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36338,"byte_end":36343,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"write","qualname":"::blocking::i2c::WriteIter::write","value":"fn <B> (&mut self, addr: u8, bytes: B) -> Result<(), Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Sends bytes to slave with address `addr`","sig":null,"attributes":[{"value":"/ Sends bytes to slave with address `addr`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36214,"byte_end":36258,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36263,"byte_end":36266,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # I2C Events (contract)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36271,"byte_end":36298,"line_start":66,"line_end":66,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36303,"byte_end":36306,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Same as `Write`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36311,"byte_end":36330,"line_start":68,"line_end":68,"column_start":5,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":37},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36490,"byte_end":36499,"line_start":75,"line_end":75,"column_start":11,"column_end":20},"name":"WriteRead","qualname":"::blocking::i2c::WriteRead","value":"WriteRead","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Blocking write + read\n","sig":null,"attributes":[{"value":"/ Blocking write + read","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36454,"byte_end":36479,"line_start":74,"line_end":74,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36530,"byte_end":36535,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::i2c::WriteRead::Error","value":"type Error;","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36506,"byte_end":36520,"line_start":76,"line_end":76,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37415,"byte_end":37425,"line_start":101,"line_end":101,"column_start":8,"column_end":18},"name":"write_read","qualname":"::blocking::i2c::WriteRead::write_read","value":"fn (&mut self, address: u8, bytes: &[u8], buffer: &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" Sends bytes to slave with address `addr` and then reads enough bytes to fill `buffer` *in a\n single transaction*","sig":null,"attributes":[{"value":"/ Sends bytes to slave with address `addr` and then reads enough bytes to fill `buffer` *in a","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36542,"byte_end":36637,"line_start":79,"line_end":79,"column_start":5,"column_end":100}},{"value":"/ single transaction*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36642,"byte_end":36665,"line_start":80,"line_end":80,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36670,"byte_end":36673,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # I2C Events (contract)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36678,"byte_end":36705,"line_start":82,"line_end":82,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36710,"byte_end":36713,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ``` text","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36718,"byte_end":36730,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/ Master: ST SAD+W     O0     O1     ... OM     SR SAD+R        MAK    MAK ...    NMAK SP","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36735,"byte_end":36826,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ Slave:           SAK    SAK    SAK ...    SAK          SAK I0     I1     ... IN","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36831,"byte_end":36914,"line_start":86,"line_end":86,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36919,"byte_end":36926,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36931,"byte_end":36934,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Where","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36939,"byte_end":36948,"line_start":89,"line_end":89,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36953,"byte_end":36956,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `ST` = start condition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36961,"byte_end":36989,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/ - `SAD+W` = slave address followed by bit 0 to indicate writing","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":36994,"byte_end":37061,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/ - `SAK` = slave acknowledge","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37066,"byte_end":37097,"line_start":93,"line_end":93,"column_start":5,"column_end":36}},{"value":"/ - `Oi` = ith outgoing byte of data","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37102,"byte_end":37140,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ - `SR` = repeated start condition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37145,"byte_end":37182,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"/ - `SAD+R` = slave address followed by bit 1 to indicate reading","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37187,"byte_end":37254,"line_start":96,"line_end":96,"column_start":5,"column_end":72}},{"value":"/ - `Ii` = ith incoming byte of data","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37259,"byte_end":37297,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ - `MAK` = master acknowledge","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37302,"byte_end":37334,"line_start":98,"line_end":98,"column_start":5,"column_end":37}},{"value":"/ - `NMAK` = master no acknowledge","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37339,"byte_end":37375,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ - `SP` = stop condition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37380,"byte_end":37407,"line_start":100,"line_end":100,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37637,"byte_end":37650,"line_start":111,"line_end":111,"column_start":11,"column_end":24},"name":"WriteIterRead","qualname":"::blocking::i2c::WriteIterRead","value":"WriteIterRead","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Blocking write (iterator version) + read\n","sig":null,"attributes":[{"value":"/ Blocking write (iterator version) + read","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37553,"byte_end":37597,"line_start":109,"line_end":109,"column_start":1,"column_end":45}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37598,"byte_end":37626,"line_start":110,"line_end":110,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37681,"byte_end":37686,"line_start":113,"line_end":113,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::i2c::WriteIterRead::Error","value":"type Error;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37657,"byte_end":37671,"line_start":112,"line_end":112,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37910,"byte_end":37925,"line_start":121,"line_end":121,"column_start":8,"column_end":23},"name":"write_iter_read","qualname":"::blocking::i2c::WriteIterRead::write_iter_read","value":"fn <B> (&mut self, address: u8, bytes: B, buffer: &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Sends bytes to slave with address `addr` and then reads enough bytes to fill `buffer` *in a\n single transaction*","sig":null,"attributes":[{"value":"/ Sends bytes to slave with address `addr` and then reads enough bytes to fill `buffer` *in a","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37693,"byte_end":37788,"line_start":115,"line_end":115,"column_start":5,"column_end":100}},{"value":"/ single transaction*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37793,"byte_end":37816,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37821,"byte_end":37824,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # I2C Events (contract)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37829,"byte_end":37856,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37861,"byte_end":37864,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Same as the `WriteRead` trait","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/i2c.rs","byte_start":37869,"byte_end":37902,"line_start":120,"line_end":120,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rng","qualname":"::blocking::rng","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" Blocking hardware random number generator\n","sig":null,"attributes":[{"value":"! Blocking hardware random number generator","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38101,"byte_end":38146,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38295,"byte_end":38299,"line_start":7,"line_end":7,"column_start":11,"column_end":15},"name":"Read","qualname":"::blocking::rng::Read","value":"Read","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Blocking read","sig":null,"attributes":[{"value":"/ Blocking read","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38148,"byte_end":38165,"line_start":3,"line_end":3,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38166,"byte_end":38169,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38170,"byte_end":38255,"line_start":5,"line_end":5,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38256,"byte_end":38284,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38330,"byte_end":38335,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::rng::Read::Error","value":"type Error;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38306,"byte_end":38320,"line_start":8,"line_end":8,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38757,"byte_end":38761,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"read","qualname":"::blocking::rng::Read::read","value":"fn (&mut self, buffer: &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Reads enough bytes from hardware random number generator to fill `buffer`","sig":null,"attributes":[{"value":"/ Reads enough bytes from hardware random number generator to fill `buffer`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38342,"byte_end":38419,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38424,"byte_end":38427,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If any error is encountered then this function immediately returns. The contents of buf are","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38432,"byte_end":38527,"line_start":13,"line_end":13,"column_start":5,"column_end":100}},{"value":"/ unspecified in this case.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38532,"byte_end":38561,"line_start":14,"line_end":14,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38566,"byte_end":38569,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ If this function returns an error, it is unspecified how many bytes it has read, but it","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38574,"byte_end":38665,"line_start":16,"line_end":16,"column_start":5,"column_end":96}},{"value":"/ will never read more than would be necessary to completely fill the buffer.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/rng.rs","byte_start":38670,"byte_end":38749,"line_start":17,"line_end":17,"column_start":5,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::blocking::serial","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":54}],"decl_id":null,"docs":" Blocking serial API\n","sig":null,"attributes":[{"value":"! Blocking serial API","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":38823,"byte_end":38846,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":38914,"byte_end":38919,"line_start":4,"line_end":4,"column_start":11,"column_end":16},"name":"Write","qualname":"::blocking::serial::Write","value":"Write<Word>","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" Write half of a serial interface (blocking variant)\n","sig":null,"attributes":[{"value":"/ Write half of a serial interface (blocking variant)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":38848,"byte_end":38903,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":38991,"byte_end":38996,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::serial::Write::Error","value":"type Error;","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" The type of error that can occur when writing\n","sig":null,"attributes":[{"value":"/ The type of error that can occur when writing","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":38932,"byte_end":38981,"line_start":5,"line_end":5,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39433,"byte_end":39443,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"bwrite_all","qualname":"::blocking::serial::Write::bwrite_all","value":"fn (&mut self, buffer: &[Word]) -> Result<(), Self::Error>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Writes a slice, blocking until everything has been written","sig":null,"attributes":[{"value":"/ Writes a slice, blocking until everything has been written","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39003,"byte_end":39065,"line_start":8,"line_end":8,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39070,"byte_end":39073,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ An implementation can choose to buffer the write, returning `Ok(())`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39078,"byte_end":39150,"line_start":10,"line_end":10,"column_start":5,"column_end":77}},{"value":"/ after the complete slice has been written to a buffer, but before all","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39155,"byte_end":39228,"line_start":11,"line_end":11,"column_start":5,"column_end":78}},{"value":"/ words have been sent via the serial interface. To make sure that","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39233,"byte_end":39301,"line_start":12,"line_end":12,"column_start":5,"column_end":73}},{"value":"/ everything has been sent, call [`bflush`] after this function returns.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39306,"byte_end":39380,"line_start":13,"line_end":13,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39385,"byte_end":39388,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ [`bflush`]: #tymethod.bflush","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39393,"byte_end":39425,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39577,"byte_end":39583,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"bflush","qualname":"::blocking::serial::Write::bflush","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Block until the serial interface has sent all buffered words\n","sig":null,"attributes":[{"value":"/ Block until the serial interface has sent all buffered words","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39505,"byte_end":39569,"line_start":18,"line_end":18,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39660,"byte_end":39665,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"write","qualname":"::blocking::serial::write","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" Blocking serial write\n","sig":null,"attributes":[{"value":"/ Blocking serial write","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39626,"byte_end":39651,"line_start":22,"line_end":22,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":40097,"byte_end":40104,"line_start":32,"line_end":32,"column_start":15,"column_end":22},"name":"Default","qualname":"::blocking::serial::write::Default","value":"Default<Word>: ::serial::Write<Word>","parent":null,"children":[],"decl_id":null,"docs":" Marker trait to opt into default blocking write implementation","sig":null,"attributes":[{"value":"/ Marker trait to opt into default blocking write implementation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39672,"byte_end":39738,"line_start":24,"line_end":24,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39743,"byte_end":39746,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Implementers of [`serial::Write`] can implement this marker trait","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39751,"byte_end":39820,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ for their type. Doing so will automatically provide the default","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39825,"byte_end":39892,"line_start":27,"line_end":27,"column_start":5,"column_end":72}},{"value":"/ implementation of [`blocking::serial::Write`] for the type.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39897,"byte_end":39960,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39965,"byte_end":39968,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`serial::Write`]: ../../serial/trait.Write.html","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":39973,"byte_end":40025,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/ [`blocking::serial::Write`]: ../trait.Write.html","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":40030,"byte_end":40082,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::blocking::spi","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":78},{"krate":0,"index":87},{"krate":0,"index":95}],"decl_id":null,"docs":" Blocking SPI API\n","sig":null,"attributes":[{"value":"! Blocking SPI API","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40628,"byte_end":40648,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40682,"byte_end":40690,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Transfer","qualname":"::blocking::spi::Transfer","value":"Transfer<W>","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Blocking transfer\n","sig":null,"attributes":[{"value":"/ Blocking transfer","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40650,"byte_end":40671,"line_start":3,"line_end":3,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":66},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40724,"byte_end":40729,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::spi::Transfer::Error","value":"type Error;","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40700,"byte_end":40714,"line_start":5,"line_end":5,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40819,"byte_end":40827,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"transfer","qualname":"::blocking::spi::Transfer::transfer","value":"fn <'w> (&mut self, words: &'w mut [W]) -> Result<&'w [W], Self::Error>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Sends `words` to the slave. Returns the `words` received from the slave\n","sig":null,"attributes":[{"value":"/ Sends `words` to the slave. Returns the `words` received from the slave","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40736,"byte_end":40811,"line_start":8,"line_end":8,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40928,"byte_end":40933,"line_start":13,"line_end":13,"column_start":11,"column_end":16},"name":"Write","qualname":"::blocking::spi::Write","value":"Write<W>","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" Blocking write\n","sig":null,"attributes":[{"value":"/ Blocking write","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40899,"byte_end":40917,"line_start":12,"line_end":12,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":71},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40967,"byte_end":40972,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::spi::Write::Error","value":"type Error;","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40943,"byte_end":40957,"line_start":14,"line_end":14,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41050,"byte_end":41055,"line_start":18,"line_end":18,"column_start":8,"column_end":13},"name":"write","qualname":"::blocking::spi::Write::write","value":"fn (&mut self, words: &[W]) -> Result<(), Self::Error>","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Sends `words` to the slave, ignoring all the incoming words\n","sig":null,"attributes":[{"value":"/ Sends `words` to the slave, ignoring all the incoming words","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":40979,"byte_end":41042,"line_start":17,"line_end":17,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41188,"byte_end":41197,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"name":"WriteIter","qualname":"::blocking::spi::WriteIter","value":"WriteIter<W>","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":" Blocking write (iterator version)\n","sig":null,"attributes":[{"value":"/ Blocking write (iterator version)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41111,"byte_end":41148,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41149,"byte_end":41177,"line_start":22,"line_end":22,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41231,"byte_end":41236,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Error","qualname":"::blocking::spi::WriteIter::Error","value":"type Error;","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41207,"byte_end":41221,"line_start":24,"line_end":24,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41314,"byte_end":41324,"line_start":28,"line_end":28,"column_start":8,"column_end":18},"name":"write_iter","qualname":"::blocking::spi::WriteIter::write_iter","value":"fn <WI> (&mut self, words: WI) -> Result<(), Self::Error>","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Sends `words` to the slave, ignoring all the incoming words\n","sig":null,"attributes":[{"value":"/ Sends `words` to the slave, ignoring all the incoming words","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41243,"byte_end":41306,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41457,"byte_end":41465,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"transfer","qualname":"::blocking::spi::transfer","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":81}],"decl_id":null,"docs":" Blocking transfer\n","sig":null,"attributes":[{"value":"/ Blocking transfer","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41427,"byte_end":41448,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":79},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41594,"byte_end":41601,"line_start":37,"line_end":37,"column_start":15,"column_end":22},"name":"Default","qualname":"::blocking::spi::transfer::Default","value":"Default<W>: ::spi::FullDuplex<W>","parent":null,"children":[],"decl_id":null,"docs":" Default implementation of `blocking::spi::Transfer<W>` for implementers of\n `spi::FullDuplex<W>`\n","sig":null,"attributes":[{"value":"/ Default implementation of `blocking::spi::Transfer<W>` for implementers of","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41472,"byte_end":41550,"line_start":35,"line_end":35,"column_start":5,"column_end":83}},{"value":"/ `spi::FullDuplex<W>`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41555,"byte_end":41579,"line_start":36,"line_end":36,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42078,"byte_end":42083,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"write","qualname":"::blocking::spi::write","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90}],"decl_id":null,"docs":" Blocking write\n","sig":null,"attributes":[{"value":"/ Blocking write","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42051,"byte_end":42069,"line_start":57,"line_end":57,"column_start":1,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42201,"byte_end":42208,"line_start":60,"line_end":60,"column_start":15,"column_end":22},"name":"Default","qualname":"::blocking::spi::write::Default","value":"Default<W>: ::spi::FullDuplex<W>","parent":null,"children":[],"decl_id":null,"docs":" Default implementation of `blocking::spi::Write<W>` for implementers of `spi::FullDuplex<W>`\n","sig":null,"attributes":[{"value":"/ Default implementation of `blocking::spi::Write<W>` for implementers of `spi::FullDuplex<W>`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42090,"byte_end":42186,"line_start":59,"line_end":59,"column_start":5,"column_end":101}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42689,"byte_end":42699,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"name":"write_iter","qualname":"::blocking::spi::write_iter","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":98}],"decl_id":null,"docs":" Blocking write (iterator version)\n","sig":null,"attributes":[{"value":"/ Blocking write (iterator version)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42614,"byte_end":42651,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42652,"byte_end":42680,"line_start":81,"line_end":81,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42829,"byte_end":42836,"line_start":85,"line_end":85,"column_start":15,"column_end":22},"name":"Default","qualname":"::blocking::spi::write_iter::Default","value":"Default<W>: ::spi::FullDuplex<W>","parent":null,"children":[],"decl_id":null,"docs":" Default implementation of `blocking::spi::WriteIter<W>` for implementers of\n `spi::FullDuplex<W>`\n","sig":null,"attributes":[{"value":"/ Default implementation of `blocking::spi::WriteIter<W>` for implementers of","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42706,"byte_end":42785,"line_start":83,"line_end":83,"column_start":5,"column_end":84}},{"value":"/ `spi::FullDuplex<W>`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42790,"byte_end":42814,"line_start":84,"line_end":84,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"digital","qualname":"::digital","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":126},{"krate":0,"index":151},{"krate":0,"index":191},{"krate":0,"index":208}],"decl_id":null,"docs":" Digital I/O","sig":null,"attributes":[{"value":"! Digital I/O","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43327,"byte_end":43342,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43343,"byte_end":43346,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43347,"byte_end":43351,"line_start":3,"line_end":3,"column_start":1,"column_end":5}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43352,"byte_end":43355,"line_start":4,"line_end":4,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::digital::v1","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":123}],"decl_id":null,"docs":" Digital I/O","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.2\", note =\n             \"Deprecated because the methods cannot return errors. \\\n                                      Users should use the traits in digital::v2.\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43391,"byte_end":43568,"line_start":7,"line_end":8,"column_start":1,"column_end":85}},{"value":"! Digital I/O","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":43919,"byte_end":43934,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":43935,"byte_end":43938,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The traits in this module are now deprecated. Please use the new versions included","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":43939,"byte_end":44025,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"! in `digital::v2`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44026,"byte_end":44047,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"allow(deprecated)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44049,"byte_end":44070,"line_start":6,"line_end":6,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44248,"byte_end":44257,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"OutputPin","qualname":"::digital::v1::OutputPin","value":"OutputPin","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Single digital push-pull output pin","sig":null,"attributes":[{"value":"/ Single digital push-pull output pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44072,"byte_end":44111,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44112,"byte_end":44115,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ *This version of the trait is now deprecated. Please use the new `OutputPin` trait in","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44116,"byte_end":44205,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"/ `digital::v2::OutputPin`*.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44206,"byte_end":44236,"line_start":11,"line_end":11,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44429,"byte_end":44436,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"set_low","qualname":"::digital::v1::OutputPin::set_low","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Drives the pin low","sig":null,"attributes":[{"value":"/ Drives the pin low","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44264,"byte_end":44286,"line_start":14,"line_end":14,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44291,"byte_end":44294,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ *NOTE* the actual electrical state of the pin may not actually be low, e.g. due to external","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44299,"byte_end":44394,"line_start":16,"line_end":16,"column_start":5,"column_end":100}},{"value":"/ electrical sources","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44399,"byte_end":44421,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44621,"byte_end":44629,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"set_high","qualname":"::digital::v1::OutputPin::set_high","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Drives the pin high","sig":null,"attributes":[{"value":"/ Drives the pin high","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44454,"byte_end":44477,"line_start":20,"line_end":20,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44482,"byte_end":44485,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ *NOTE* the actual electrical state of the pin may not actually be high, e.g. due to external","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44490,"byte_end":44586,"line_start":22,"line_end":22,"column_start":5,"column_end":101}},{"value":"/ electrical sources","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44591,"byte_end":44613,"line_start":23,"line_end":23,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":109},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44971,"byte_end":44988,"line_start":34,"line_end":34,"column_start":11,"column_end":28},"name":"StatefulOutputPin","qualname":"::digital::v1::StatefulOutputPin","value":"StatefulOutputPin","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" Push-pull output pin that can read its output state","sig":null,"attributes":[{"value":"/ Push-pull output pin that can read its output state","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44645,"byte_end":44700,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44701,"byte_end":44704,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44705,"byte_end":44790,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44791,"byte_end":44794,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ *This version of the trait is now deprecated. Please use the new `StatefulOutputPin` trait in","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44795,"byte_end":44892,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ `digital::v2::StatefulOutputPin`*.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44893,"byte_end":44931,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44932,"byte_end":44960,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45113,"byte_end":45124,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_set_high","qualname":"::digital::v1::StatefulOutputPin::is_set_high","value":"fn (&self) -> bool","parent":{"krate":0,"index":109},"children":[],"decl_id":null,"docs":" Is the pin in drive high mode?","sig":null,"attributes":[{"value":"/ Is the pin in drive high mode?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":44995,"byte_end":45029,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45034,"byte_end":45037,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ *NOTE* this does *not* read the electrical state of the pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45042,"byte_end":45105,"line_start":37,"line_end":37,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45263,"byte_end":45273,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"is_set_low","qualname":"::digital::v1::StatefulOutputPin::is_set_low","value":"fn (&self) -> bool","parent":{"krate":0,"index":109},"children":[],"decl_id":null,"docs":" Is the pin in drive low mode?","sig":null,"attributes":[{"value":"/ Is the pin in drive low mode?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45146,"byte_end":45179,"line_start":40,"line_end":40,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45184,"byte_end":45187,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ *NOTE* this does *not* read the electrical state of the pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45192,"byte_end":45255,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45850,"byte_end":45869,"line_start":58,"line_end":58,"column_start":11,"column_end":30},"name":"ToggleableOutputPin","qualname":"::digital::v1::ToggleableOutputPin","value":"ToggleableOutputPin","parent":null,"children":[{"krate":0,"index":113}],"decl_id":null,"docs":" Output pin that can be toggled","sig":null,"attributes":[{"value":"/ Output pin that can be toggled","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45293,"byte_end":45327,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45328,"byte_end":45331,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45332,"byte_end":45417,"line_start":48,"line_end":48,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45418,"byte_end":45421,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ *This version of the trait is now deprecated. Please use the new `ToggleableOutputPin`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45422,"byte_end":45512,"line_start":50,"line_end":50,"column_start":1,"column_end":91}},{"value":"/ trait in `digital::v2::ToggleableOutputPin`*.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45513,"byte_end":45562,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45563,"byte_end":45566,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ See [toggleable](toggleable) to use a software implementation if","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45567,"byte_end":45635,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ both [OutputPin](trait.OutputPin.html) and","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45636,"byte_end":45682,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [StatefulOutputPin](trait.StatefulOutputPin.html) are","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45683,"byte_end":45740,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ implemented. Otherwise, implement this using hardware mechanisms.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45741,"byte_end":45810,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45811,"byte_end":45839,"line_start":57,"line_end":57,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45906,"byte_end":45912,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"toggle","qualname":"::digital::v1::ToggleableOutputPin::toggle","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Toggle pin output.\n","sig":null,"attributes":[{"value":"/ Toggle pin output.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45876,"byte_end":45898,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":114},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47049,"byte_end":47059,"line_start":106,"line_end":106,"column_start":9,"column_end":19},"name":"toggleable","qualname":"::digital::v1::toggleable","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":120}],"decl_id":null,"docs":" If you can read **and** write the output state, a pin is\n toggleable by software.","sig":null,"attributes":[{"value":"/ If you can read **and** write the output state, a pin is","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45928,"byte_end":45988,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ toggleable by software.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":45989,"byte_end":46016,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46017,"byte_end":46020,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ *This version of the module is now deprecated. Please use the new `toggleable` module in","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46021,"byte_end":46113,"line_start":66,"line_end":66,"column_start":1,"column_end":93}},{"value":"/ `digital::v2::toggleable`*.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46114,"byte_end":46145,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46146,"byte_end":46149,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46150,"byte_end":46157,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use embedded_hal::digital::{OutputPin, StatefulOutputPin, ToggleableOutputPin};","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46158,"byte_end":46241,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ use embedded_hal::digital::toggleable;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46242,"byte_end":46284,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46285,"byte_end":46288,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ /// A virtual output pin that exists purely in software","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46289,"byte_end":46348,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/ struct MyPin {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46349,"byte_end":46367,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/     state: bool","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46368,"byte_end":46387,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46388,"byte_end":46393,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46394,"byte_end":46397,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ impl OutputPin for MyPin {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46398,"byte_end":46428,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/    fn set_low(&mut self) {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46429,"byte_end":46459,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/        self.state = false;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46460,"byte_end":46490,"line_start":80,"line_end":80,"column_start":1,"column_end":31}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46491,"byte_end":46499,"line_start":81,"line_end":81,"column_start":1,"column_end":9}},{"value":"/    fn set_high(&mut self) {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46500,"byte_end":46531,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/        self.state = true;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46532,"byte_end":46561,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46562,"byte_end":46570,"line_start":84,"line_end":84,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46571,"byte_end":46576,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46577,"byte_end":46580,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ impl StatefulOutputPin for MyPin {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46581,"byte_end":46619,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/    fn is_set_low(&self) -> bool {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46620,"byte_end":46657,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/        !self.state","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46658,"byte_end":46680,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46681,"byte_end":46689,"line_start":90,"line_end":90,"column_start":1,"column_end":9}},{"value":"/    fn is_set_high(&self) -> bool {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46690,"byte_end":46728,"line_start":91,"line_end":91,"column_start":1,"column_end":39}},{"value":"/        self.state","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46729,"byte_end":46750,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46751,"byte_end":46759,"line_start":93,"line_end":93,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46760,"byte_end":46765,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46766,"byte_end":46769,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ /// Opt-in to the software implementation.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46770,"byte_end":46816,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/ impl toggleable::Default for MyPin {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46817,"byte_end":46858,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46859,"byte_end":46862,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let mut pin = MyPin { state: false };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46863,"byte_end":46904,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"/ pin.toggle();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46905,"byte_end":46922,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ assert!(pin.is_set_high());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46923,"byte_end":46954,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ pin.toggle();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46955,"byte_end":46972,"line_start":102,"line_end":102,"column_start":1,"column_end":18}},{"value":"/ assert!(pin.is_set_low());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":46973,"byte_end":47003,"line_start":103,"line_end":103,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47004,"byte_end":47011,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47012,"byte_end":47040,"line_start":105,"line_end":105,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":119},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47344,"byte_end":47351,"line_start":114,"line_end":114,"column_start":15,"column_end":22},"name":"Default","qualname":"::digital::v1::toggleable::Default","value":"Default: OutputPin + StatefulOutputPin","parent":null,"children":[],"decl_id":null,"docs":" Software-driven `toggle()` implementation.","sig":null,"attributes":[{"value":"/ Software-driven `toggle()` implementation.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47160,"byte_end":47206,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47211,"byte_end":47214,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47219,"byte_end":47304,"line_start":112,"line_end":112,"column_start":5,"column_end":90}},{"value":"allow(deprecated)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47309,"byte_end":47329,"line_start":113,"line_end":113,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47982,"byte_end":47990,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"name":"InputPin","qualname":"::digital::v1::InputPin","value":"InputPin","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Single digital input pin","sig":null,"attributes":[{"value":"/ Single digital input pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47701,"byte_end":47729,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47730,"byte_end":47733,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47734,"byte_end":47819,"line_start":134,"line_end":134,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47820,"byte_end":47823,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ *This version of the trait is now deprecated. Please use the new `InputPin` trait in","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47824,"byte_end":47912,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ `digital::v2::InputPin`*.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47913,"byte_end":47942,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47943,"byte_end":47971,"line_start":138,"line_end":138,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":48031,"byte_end":48038,"line_start":141,"line_end":141,"column_start":8,"column_end":15},"name":"is_high","qualname":"::digital::v1::InputPin::is_high","value":"fn (&self) -> bool","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Is the input pin high?\n","sig":null,"attributes":[{"value":"/ Is the input pin high?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47997,"byte_end":48023,"line_start":140,"line_end":140,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":48093,"byte_end":48099,"line_start":144,"line_end":144,"column_start":8,"column_end":14},"name":"is_low","qualname":"::digital::v1::InputPin::is_low","value":"fn (&self) -> bool","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Is the input pin low?\n","sig":null,"attributes":[{"value":"/ Is the input pin low?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":48060,"byte_end":48085,"line_start":143,"line_end":143,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v2","qualname":"::digital::v2","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":147}],"decl_id":null,"docs":" Digital I/O","sig":null,"attributes":[{"value":"! Digital I/O","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48119,"byte_end":48134,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48135,"byte_end":48138,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Version 2 / fallible traits. Infallible implementations should set Error to `!`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48139,"byte_end":48223,"line_start":3,"line_end":3,"column_start":1,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48275,"byte_end":48284,"line_start":6,"line_end":6,"column_start":11,"column_end":20},"name":"OutputPin","qualname":"::digital::v2::OutputPin","value":"OutputPin","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" Single digital push-pull output pin\n","sig":null,"attributes":[{"value":"/ Single digital push-pull output pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48225,"byte_end":48264,"line_start":5,"line_end":5,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48315,"byte_end":48320,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::digital::v2::OutputPin::Error","value":"type Error;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48291,"byte_end":48305,"line_start":7,"line_end":7,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48492,"byte_end":48499,"line_start":14,"line_end":14,"column_start":8,"column_end":15},"name":"set_low","qualname":"::digital::v2::OutputPin::set_low","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drives the pin low","sig":null,"attributes":[{"value":"/ Drives the pin low","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48327,"byte_end":48349,"line_start":10,"line_end":10,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48354,"byte_end":48357,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ *NOTE* the actual electrical state of the pin may not actually be low, e.g. due to external","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48362,"byte_end":48457,"line_start":12,"line_end":12,"column_start":5,"column_end":100}},{"value":"/ electrical sources","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48462,"byte_end":48484,"line_start":13,"line_end":13,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48711,"byte_end":48719,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"set_high","qualname":"::digital::v2::OutputPin::set_high","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drives the pin high","sig":null,"attributes":[{"value":"/ Drives the pin high","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48544,"byte_end":48567,"line_start":16,"line_end":16,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48572,"byte_end":48575,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ *NOTE* the actual electrical state of the pin may not actually be high, e.g. due to external","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48580,"byte_end":48676,"line_start":18,"line_end":18,"column_start":5,"column_end":101}},{"value":"/ electrical sources","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48681,"byte_end":48703,"line_start":19,"line_end":19,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48947,"byte_end":48964,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"StatefulOutputPin","qualname":"::digital::v2::StatefulOutputPin","value":"StatefulOutputPin: OutputPin","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Push-pull output pin that can read its output state","sig":null,"attributes":[{"value":"/ Push-pull output pin that can read its output state","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48762,"byte_end":48817,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48818,"byte_end":48821,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48822,"byte_end":48907,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48908,"byte_end":48936,"line_start":26,"line_end":26,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49101,"byte_end":49112,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"is_set_high","qualname":"::digital::v2::StatefulOutputPin::is_set_high","value":"fn (&self) -> Result<bool, Self::Error>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Is the pin in drive high mode?","sig":null,"attributes":[{"value":"/ Is the pin in drive high mode?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48983,"byte_end":49017,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49022,"byte_end":49025,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ *NOTE* this does *not* read the electrical state of the pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49030,"byte_end":49093,"line_start":30,"line_end":30,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49272,"byte_end":49282,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"is_set_low","qualname":"::digital::v2::StatefulOutputPin::is_set_low","value":"fn (&self) -> Result<bool, Self::Error>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Is the pin in drive low mode?","sig":null,"attributes":[{"value":"/ Is the pin in drive low mode?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49155,"byte_end":49188,"line_start":33,"line_end":33,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49193,"byte_end":49196,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ *NOTE* this does *not* read the electrical state of the pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49201,"byte_end":49264,"line_start":35,"line_end":35,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":134},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49735,"byte_end":49754,"line_start":48,"line_end":48,"column_start":11,"column_end":30},"name":"ToggleableOutputPin","qualname":"::digital::v2::ToggleableOutputPin","value":"ToggleableOutputPin","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":" Output pin that can be toggled","sig":null,"attributes":[{"value":"/ Output pin that can be toggled","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49323,"byte_end":49357,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49358,"byte_end":49361,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49362,"byte_end":49447,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49448,"byte_end":49451,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ See [toggleable](toggleable) to use a software implementation if","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49452,"byte_end":49520,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ both [OutputPin](trait.OutputPin.html) and","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49521,"byte_end":49567,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ [StatefulOutputPin](trait.StatefulOutputPin.html) are","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49568,"byte_end":49625,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ implemented. Otherwise, implement this using hardware mechanisms.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49626,"byte_end":49695,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49696,"byte_end":49724,"line_start":47,"line_end":47,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49785,"byte_end":49790,"line_start":50,"line_end":50,"column_start":10,"column_end":15},"name":"Error","qualname":"::digital::v2::ToggleableOutputPin::Error","value":"type Error;","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49761,"byte_end":49775,"line_start":49,"line_end":49,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49827,"byte_end":49833,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"toggle","qualname":"::digital::v2::ToggleableOutputPin::toggle","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Toggle pin output.\n","sig":null,"attributes":[{"value":"/ Toggle pin output.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49797,"byte_end":49819,"line_start":52,"line_end":52,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51088,"byte_end":51098,"line_start":100,"line_end":100,"column_start":9,"column_end":19},"name":"toggleable","qualname":"::digital::v2::toggleable","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" If you can read **and** write the output state, a pin is\n toggleable by software.","sig":null,"attributes":[{"value":"/ If you can read **and** write the output state, a pin is","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49876,"byte_end":49936,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ toggleable by software.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49937,"byte_end":49964,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49965,"byte_end":49968,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49969,"byte_end":49976,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use embedded_hal::digital::v2::{OutputPin, StatefulOutputPin, ToggleableOutputPin};","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":49977,"byte_end":50064,"line_start":60,"line_end":60,"column_start":1,"column_end":88}},{"value":"/ use embedded_hal::digital::v2::toggleable;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50065,"byte_end":50111,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50112,"byte_end":50115,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ /// A virtual output pin that exists purely in software","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50116,"byte_end":50175,"line_start":63,"line_end":63,"column_start":1,"column_end":60}},{"value":"/ struct MyPin {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50176,"byte_end":50194,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/     state: bool","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50195,"byte_end":50214,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50215,"byte_end":50220,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50221,"byte_end":50224,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl OutputPin for MyPin {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50225,"byte_end":50255,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/    type Error = void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50256,"byte_end":50287,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50288,"byte_end":50291,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/    fn set_low(&mut self) -> Result<(), Self::Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50292,"byte_end":50349,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/        self.state = false;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50350,"byte_end":50380,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/        Ok(())","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50381,"byte_end":50398,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50399,"byte_end":50407,"line_start":74,"line_end":74,"column_start":1,"column_end":9}},{"value":"/    fn set_high(&mut self) -> Result<(), Self::Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50408,"byte_end":50466,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/        self.state = true;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50467,"byte_end":50496,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/        Ok(())","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50497,"byte_end":50514,"line_start":77,"line_end":77,"column_start":1,"column_end":18}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50515,"byte_end":50523,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50524,"byte_end":50529,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50530,"byte_end":50533,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ impl StatefulOutputPin for MyPin {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50534,"byte_end":50572,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/    fn is_set_low(&self) -> Result<bool, Self::Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50573,"byte_end":50631,"line_start":82,"line_end":82,"column_start":1,"column_end":59}},{"value":"/        Ok(!self.state)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50632,"byte_end":50658,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50659,"byte_end":50667,"line_start":84,"line_end":84,"column_start":1,"column_end":9}},{"value":"/    fn is_set_high(&self) -> Result<bool, Self::Error> {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50668,"byte_end":50727,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/        Ok(self.state)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50728,"byte_end":50753,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"/    }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50754,"byte_end":50762,"line_start":87,"line_end":87,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50763,"byte_end":50768,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50769,"byte_end":50772,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ /// Opt-in to the software implementation.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50773,"byte_end":50819,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"/ impl toggleable::Default for MyPin {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50820,"byte_end":50861,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50862,"byte_end":50865,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let mut pin = MyPin { state: false };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50866,"byte_end":50907,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"/ pin.toggle().unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50908,"byte_end":50934,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/ assert!(pin.is_set_high().unwrap());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50935,"byte_end":50975,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/ pin.toggle().unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":50976,"byte_end":51002,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/ assert!(pin.is_set_low().unwrap());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51003,"byte_end":51042,"line_start":97,"line_end":97,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51043,"byte_end":51050,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51051,"byte_end":51079,"line_start":99,"line_end":99,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":142},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51333,"byte_end":51340,"line_start":106,"line_end":106,"column_start":15,"column_end":22},"name":"Default","qualname":"::digital::v2::toggleable::Default","value":"Default: OutputPin + StatefulOutputPin","parent":null,"children":[],"decl_id":null,"docs":" Software-driven `toggle()` implementation.","sig":null,"attributes":[{"value":"/ Software-driven `toggle()` implementation.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51174,"byte_end":51220,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51225,"byte_end":51228,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51233,"byte_end":51318,"line_start":105,"line_end":105,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51881,"byte_end":51889,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"name":"InputPin","qualname":"::digital::v2::InputPin","value":"InputPin","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":" Single digital input pin","sig":null,"attributes":[{"value":"/ Single digital input pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51723,"byte_end":51751,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51752,"byte_end":51755,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51756,"byte_end":51841,"line_start":127,"line_end":127,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51842,"byte_end":51870,"line_start":128,"line_end":128,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":148},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51920,"byte_end":51925,"line_start":131,"line_end":131,"column_start":10,"column_end":15},"name":"Error","qualname":"::digital::v2::InputPin::Error","value":"type Error;","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51896,"byte_end":51910,"line_start":130,"line_end":130,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51966,"byte_end":51973,"line_start":134,"line_end":134,"column_start":8,"column_end":15},"name":"is_high","qualname":"::digital::v2::InputPin::is_high","value":"fn (&self) -> Result<bool, Self::Error>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Is the input pin high?\n","sig":null,"attributes":[{"value":"/ Is the input pin high?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51932,"byte_end":51958,"line_start":133,"line_end":133,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":52049,"byte_end":52055,"line_start":137,"line_end":137,"column_start":8,"column_end":14},"name":"is_low","qualname":"::digital::v2::InputPin::is_low","value":"fn (&self) -> Result<bool, Self::Error>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Is the input pin low?\n","sig":null,"attributes":[{"value":"/ Is the input pin low?","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":52016,"byte_end":52041,"line_start":136,"line_end":136,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":151},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1_compat","qualname":"::digital::v1_compat","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":186}],"decl_id":null,"docs":" v1 compatibility wrapper\n this module adds reverse support for v2 digital traits\n v2 traits must be explicitly cast to the v1 version using `.into()`,\n and will panic on internal errors\n","sig":null,"attributes":[{"value":"! v1 compatibility wrapper","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52096,"byte_end":52124,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"! this module adds reverse support for v2 digital traits","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52125,"byte_end":52183,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"! v2 traits must be explicitly cast to the v1 version using `.into()`,","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52184,"byte_end":52256,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! and will panic on internal errors","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52257,"byte_end":52294,"line_start":4,"line_end":4,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52454,"byte_end":52466,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"OldOutputPin","qualname":"::digital::v1_compat::OldOutputPin","value":"OldOutputPin {  }","parent":null,"children":[{"krate":0,"index":156}],"decl_id":null,"docs":" Wrapper to allow fallible `v2::OutputPin` traits to be converted to `v1::OutputPin` traits\n","sig":null,"attributes":[{"value":"/ Wrapper to allow fallible `v2::OutputPin` traits to be converted to `v1::OutputPin` traits","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52348,"byte_end":52442,"line_start":10,"line_end":10,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52657,"byte_end":52660,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<OldOutputPin<T>>::new","value":"fn (pin: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new OldOutputPin wrapper around a `v2::OutputPin`\n","sig":null,"attributes":[{"value":"/ Create a new OldOutputPin wrapper around a `v2::OutputPin`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52583,"byte_end":52645,"line_start":20,"line_end":20,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54024,"byte_end":54035,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"OldInputPin","qualname":"::digital::v1_compat::OldInputPin","value":"OldInputPin {  }","parent":null,"children":[{"krate":0,"index":177}],"decl_id":null,"docs":" Wrapper to allow fallible `v2::InputPin` traits to be converted to `v1::InputPin` traits\n where errors will panic.\n","sig":null,"attributes":[{"value":"/ Wrapper to allow fallible `v2::InputPin` traits to be converted to `v1::InputPin` traits","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":53862,"byte_end":53954,"line_start":77,"line_end":77,"column_start":1,"column_end":93}},{"value":"/ where errors will panic.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":53955,"byte_end":53983,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":53984,"byte_end":54012,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54252,"byte_end":54255,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OldInputPin<T>>::new","value":"fn (pin: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `OldInputPin` wrapper around a `v2::InputPin`.\n","sig":null,"attributes":[{"value":"/ Create an `OldInputPin` wrapper around a `v2::InputPin`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54180,"byte_end":54240,"line_start":90,"line_end":90,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v2_compat","qualname":"::digital::v2_compat","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":203}],"decl_id":null,"docs":" v2 compatibility shims\n this module adds implicit forward support to v1 digital traits\n","sig":null,"attributes":[{"value":"! v2 compatibility shims","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":58037,"byte_end":58063,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"! this module adds implicit forward support to v1 digital traits","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":58064,"byte_end":58130,"line_start":2,"line_end":2,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":209},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/fmt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fmt","qualname":"::fmt","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/fmt.rs","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213}],"decl_id":null,"docs":" Implementation of `core::fmt::Write` for the HAL's `serial::Write`.","sig":null,"attributes":[{"value":"! Implementation of `core::fmt::Write` for the HAL's `serial::Write`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/fmt.rs","byte_start":61713,"byte_end":61784,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/fmt.rs","byte_start":61785,"byte_end":61788,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! TODO write example of usage","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/fmt.rs","byte_start":61789,"byte_end":61820,"line_start":3,"line_end":3,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":218},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"decl_id":null,"docs":" The prelude is a collection of all the traits in this crate","sig":null,"attributes":[{"value":"! The prelude is a collection of all the traits in this crate","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62150,"byte_end":62213,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62214,"byte_end":62217,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The traits have been renamed to avoid collisions with other items when","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62218,"byte_end":62292,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! performing a glob import.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/prelude.rs","byte_start":62293,"byte_end":62322,"line_start":4,"line_end":4,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":245},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::serial","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":251}],"decl_id":null,"docs":" Serial interface\n","sig":null,"attributes":[{"value":"! Serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64100,"byte_end":64120,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":247},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64330,"byte_end":64334,"line_start":9,"line_end":9,"column_start":11,"column_end":15},"name":"Read","qualname":"::serial::Read","value":"Read<Word>","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" Read half of a serial interface","sig":null,"attributes":[{"value":"/ Read half of a serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64131,"byte_end":64166,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64167,"byte_end":64170,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Some serial interfaces support different data sizes (8 bits, 9 bits, etc.);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64171,"byte_end":64250,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ This can be encoded in this trait via the `Word` type parameter.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64251,"byte_end":64319,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":249},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64371,"byte_end":64376,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::serial::Read::Error","value":"type Error;","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" Read error\n","sig":null,"attributes":[{"value":"/ Read error","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64347,"byte_end":64361,"line_start":10,"line_end":10,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64440,"byte_end":64444,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"read","qualname":"::serial::Read::read","value":"fn (&mut self) -> nb::Result<Word, Self::Error>","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" Reads a single word from the serial interface\n","sig":null,"attributes":[{"value":"/ Reads a single word from the serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64383,"byte_end":64432,"line_start":13,"line_end":13,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":251},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64540,"byte_end":64545,"line_start":18,"line_end":18,"column_start":11,"column_end":16},"name":"Write","qualname":"::serial::Write","value":"Write<Word>","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"decl_id":null,"docs":" Write half of a serial interface\n","sig":null,"attributes":[{"value":"/ Write half of a serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64493,"byte_end":64529,"line_start":17,"line_end":17,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":253},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64583,"byte_end":64588,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Error","qualname":"::serial::Write::Error","value":"type Error;","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Write error\n","sig":null,"attributes":[{"value":"/ Write error","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64558,"byte_end":64573,"line_start":19,"line_end":19,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64651,"byte_end":64656,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"write","qualname":"::serial::Write::write","value":"fn (&mut self, word: Word) -> nb::Result<(), Self::Error>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Writes a single word to the serial interface\n","sig":null,"attributes":[{"value":"/ Writes a single word to the serial interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64595,"byte_end":64643,"line_start":22,"line_end":22,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64797,"byte_end":64802,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"flush","qualname":"::serial::Write::flush","value":"fn (&mut self) -> nb::Result<(), Self::Error>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Ensures that none of the previously written words are still buffered\n","sig":null,"attributes":[{"value":"/ Ensures that none of the previously written words are still buffered","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/serial.rs","byte_start":64717,"byte_end":64789,"line_start":25,"line_end":25,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":256},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":322},{"krate":0,"index":334},{"krate":0,"index":333},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":336},{"krate":0,"index":348},{"krate":0,"index":347},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":350},{"krate":0,"index":361},{"krate":0,"index":360},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"decl_id":null,"docs":" Serial Peripheral Interface\n","sig":null,"attributes":[{"value":"! Serial Peripheral Interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":64849,"byte_end":64880,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65283,"byte_end":65293,"line_start":15,"line_end":15,"column_start":11,"column_end":21},"name":"FullDuplex","qualname":"::spi::FullDuplex","value":"FullDuplex<Word>","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Full duplex (master mode)","sig":null,"attributes":[{"value":"/ Full duplex (master mode)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":64891,"byte_end":64920,"line_start":5,"line_end":5,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":64921,"byte_end":64924,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":64925,"byte_end":64936,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":64937,"byte_end":64940,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - It's the task of the user of this interface to manage the slave select lines","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":64941,"byte_end":65023,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65024,"byte_end":65027,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - Due to how full duplex SPI works each `read` call must be preceded by a `send` call.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65028,"byte_end":65118,"line_start":11,"line_end":11,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65119,"byte_end":65122,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - Some SPIs can work with 8-bit *and* 16-bit words. You can overload this trait with different","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65123,"byte_end":65221,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ `Word` types to allow operation in both modes.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65222,"byte_end":65272,"line_start":14,"line_end":14,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":260},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65348,"byte_end":65353,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::FullDuplex::Error","value":"type Error;","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" An enumeration of SPI errors\n","sig":null,"attributes":[{"value":"/ An enumeration of SPI errors","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65306,"byte_end":65338,"line_start":16,"line_end":16,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65520,"byte_end":65524,"line_start":23,"line_end":23,"column_start":8,"column_end":12},"name":"read","qualname":"::spi::FullDuplex::read","value":"fn (&mut self) -> nb::Result<Word, Self::Error>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Reads the word stored in the shift register","sig":null,"attributes":[{"value":"/ Reads the word stored in the shift register","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65360,"byte_end":65407,"line_start":19,"line_end":19,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65412,"byte_end":65415,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ **NOTE** A word must be sent to the slave before attempting to call this","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65420,"byte_end":65496,"line_start":21,"line_end":21,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65501,"byte_end":65512,"line_start":22,"line_end":22,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65612,"byte_end":65616,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"send","qualname":"::spi::FullDuplex::send","value":"fn (&mut self, word: Word) -> nb::Result<(), Self::Error>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Sends a word to the slave\n","sig":null,"attributes":[{"value":"/ Sends a word to the slave","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65575,"byte_end":65604,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65791,"byte_end":65798,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"IdleLow","qualname":"::spi::Polarity::IdleLow","value":"Polarity::IdleLow","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" Clock signal low when idle\n","sig":null,"attributes":[{"value":"/ Clock signal low when idle","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65756,"byte_end":65786,"line_start":32,"line_end":32,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65840,"byte_end":65848,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"IdleHigh","qualname":"::spi::Polarity::IdleHigh","value":"Polarity::IdleHigh","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" Clock signal high when idle\n","sig":null,"attributes":[{"value":"/ Clock signal high when idle","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65804,"byte_end":65835,"line_start":34,"line_end":34,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":322},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65741,"byte_end":65749,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"Polarity","qualname":"::spi::Polarity","value":"Polarity::{IdleLow, IdleHigh}","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":325}],"decl_id":null,"docs":" Clock polarity\n","sig":null,"attributes":[{"value":"/ Clock polarity","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65675,"byte_end":65693,"line_start":29,"line_end":29,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65985,"byte_end":66009,"line_start":42,"line_end":42,"column_start":5,"column_end":29},"name":"CaptureOnFirstTransition","qualname":"::spi::Phase::CaptureOnFirstTransition","value":"Phase::CaptureOnFirstTransition","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":" Data in \"captured\" on the first clock transition\n","sig":null,"attributes":[{"value":"/ Data in \"captured\" on the first clock transition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65928,"byte_end":65980,"line_start":41,"line_end":41,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66073,"byte_end":66098,"line_start":44,"line_end":44,"column_start":5,"column_end":30},"name":"CaptureOnSecondTransition","qualname":"::spi::Phase::CaptureOnSecondTransition","value":"Phase::CaptureOnSecondTransition","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":" Data in \"captured\" on the second clock transition\n","sig":null,"attributes":[{"value":"/ Data in \"captured\" on the second clock transition","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66015,"byte_end":66068,"line_start":43,"line_end":43,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":336},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65916,"byte_end":65921,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Phase","qualname":"::spi::Phase","value":"Phase::{CaptureOnFirstTransition, CaptureOnSecondTransition}","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":339}],"decl_id":null,"docs":" Clock phase\n","sig":null,"attributes":[{"value":"/ Clock phase","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":65853,"byte_end":65868,"line_start":38,"line_end":38,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66165,"byte_end":66169,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Mode","qualname":"::spi::Mode","value":"Mode { polarity, phase }","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" SPI mode\n","sig":null,"attributes":[{"value":"/ SPI mode","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66103,"byte_end":66115,"line_start":47,"line_end":47,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":351},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66203,"byte_end":66211,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"polarity","qualname":"::spi::Mode::polarity","value":"spi::Polarity","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Clock polarity\n","sig":null,"attributes":[{"value":"/ Clock polarity","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66176,"byte_end":66194,"line_start":50,"line_end":50,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":352},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66251,"byte_end":66256,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"phase","qualname":"::spi::Mode::phase","value":"spi::Phase","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Clock phase\n","sig":null,"attributes":[{"value":"/ Clock phase","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66227,"byte_end":66242,"line_start":52,"line_end":52,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":263},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66312,"byte_end":66318,"line_start":57,"line_end":57,"column_start":11,"column_end":17},"name":"MODE_0","qualname":"::spi::MODE_0","value":"Mode","parent":null,"children":[],"decl_id":null,"docs":" Helper for CPOL = 0, CPHA = 0\n","sig":null,"attributes":[{"value":"/ Helper for CPOL = 0, CPHA = 0","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66268,"byte_end":66301,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":264},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66459,"byte_end":66465,"line_start":63,"line_end":63,"column_start":11,"column_end":17},"name":"MODE_1","qualname":"::spi::MODE_1","value":"Mode","parent":null,"children":[],"decl_id":null,"docs":" Helper for CPOL = 0, CPHA = 1\n","sig":null,"attributes":[{"value":"/ Helper for CPOL = 0, CPHA = 1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66415,"byte_end":66448,"line_start":62,"line_end":62,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":265},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66607,"byte_end":66613,"line_start":69,"line_end":69,"column_start":11,"column_end":17},"name":"MODE_2","qualname":"::spi::MODE_2","value":"Mode","parent":null,"children":[],"decl_id":null,"docs":" Helper for CPOL = 1, CPHA = 0\n","sig":null,"attributes":[{"value":"/ Helper for CPOL = 1, CPHA = 0","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66563,"byte_end":66596,"line_start":68,"line_end":68,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":266},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66755,"byte_end":66761,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"MODE_3","qualname":"::spi::MODE_3","value":"Mode","parent":null,"children":[],"decl_id":null,"docs":" Helper for CPOL = 1, CPHA = 1\n","sig":null,"attributes":[{"value":"/ Helper for CPOL = 1, CPHA = 1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/spi.rs","byte_start":66711,"byte_end":66744,"line_start":74,"line_end":74,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":267},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" Timers\n","sig":null,"attributes":[{"value":"! Timers","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":66859,"byte_end":66869,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":270},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68280,"byte_end":68289,"line_start":60,"line_end":60,"column_start":11,"column_end":20},"name":"CountDown","qualname":"::timer::CountDown","value":"CountDown","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274}],"decl_id":null,"docs":" A count down timer","sig":null,"attributes":[{"value":"/ A count down timer","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":66896,"byte_end":66918,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":66919,"byte_end":66922,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":66923,"byte_end":66937,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":66938,"byte_end":66941,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - `self.start(count); block!(self.wait());` MUST block for AT LEAST the time specified by","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":66942,"byte_end":67035,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ `count`.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67036,"byte_end":67048,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67049,"byte_end":67052,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ *Note* that the implementer doesn't necessarily have to be a *downcounting* timer; it could also","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67053,"byte_end":67153,"line_start":13,"line_end":13,"column_start":1,"column_end":101}},{"value":"/ be an *upcounting* timer as long as the above contract is upheld.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67154,"byte_end":67223,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67224,"byte_end":67227,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67228,"byte_end":67242,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67243,"byte_end":67246,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can use this timer to create delays","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67247,"byte_end":67290,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67291,"byte_end":67294,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67295,"byte_end":67302,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67303,"byte_end":67340,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/ #[macro_use(block)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67341,"byte_end":67364,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/ extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67365,"byte_end":67385,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67386,"byte_end":67389,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67390,"byte_end":67414,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67415,"byte_end":67418,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67419,"byte_end":67434,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     let mut led: Led = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67435,"byte_end":67463,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67464,"byte_end":67481,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #       Led","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67482,"byte_end":67497,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67498,"byte_end":67508,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"/     let mut timer: Timer6 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67509,"byte_end":67542,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67543,"byte_end":67560,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ #       Timer6","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67561,"byte_end":67579,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67580,"byte_end":67590,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67591,"byte_end":67594,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     Led.on();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67595,"byte_end":67612,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/     timer.start(1.s());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67613,"byte_end":67640,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     block!(timer.wait()); // blocks for 1 second","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67641,"byte_end":67693,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/     Led.off();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67694,"byte_end":67712,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67713,"byte_end":67718,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67719,"byte_end":67722,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67723,"byte_end":67747,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/ # use void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67748,"byte_end":67769,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ # struct Seconds(u32);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67770,"byte_end":67796,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/ # trait U32Ext { fn s(self) -> Seconds; }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67797,"byte_end":67842,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/ # impl U32Ext for u32 { fn s(self) -> Seconds { Seconds(self) } }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67843,"byte_end":67912,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ # struct Led;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67913,"byte_end":67930,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ # impl Led {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67931,"byte_end":67947,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/ #     pub fn off(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67948,"byte_end":67982,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ #     pub fn on(&mut self) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":67983,"byte_end":68016,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68017,"byte_end":68024,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ # struct Timer6;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68025,"byte_end":68045,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/ # impl hal::timer::CountDown for Timer6 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68046,"byte_end":68091,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ #     type Time = Seconds;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68092,"byte_end":68122,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/ #     fn start<T>(&mut self, _: T) where T: Into<Seconds> {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68123,"byte_end":68187,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ #     fn wait(&mut self) -> ::nb::Result<(), Void> { Ok(()) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68188,"byte_end":68253,"line_start":57,"line_end":57,"column_start":1,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68254,"byte_end":68261,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68262,"byte_end":68269,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":271},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68345,"byte_end":68349,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Time","qualname":"::timer::CountDown::Time","value":"type Time;","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" The unit of time used by this timer\n","sig":null,"attributes":[{"value":"/ The unit of time used by this timer","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68296,"byte_end":68335,"line_start":61,"line_end":61,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68391,"byte_end":68396,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"start","qualname":"::timer::CountDown::start","value":"fn <T> (&mut self, count: T) -> ()","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Starts a new count down\n","sig":null,"attributes":[{"value":"/ Starts a new count down","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68356,"byte_end":68383,"line_start":64,"line_end":64,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68868,"byte_end":68872,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"wait","qualname":"::timer::CountDown::wait","value":"fn (&mut self) -> nb::Result<(), Void>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Non-blockingly \"waits\" until the count down finishes","sig":null,"attributes":[{"value":"/ Non-blockingly \"waits\" until the count down finishes","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68465,"byte_end":68521,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68526,"byte_end":68529,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Contract","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68534,"byte_end":68548,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68553,"byte_end":68556,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ - If `Self: Periodic`, the timer will start a new count down right after the last one","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68561,"byte_end":68650,"line_start":73,"line_end":73,"column_start":5,"column_end":94}},{"value":"/ finishes.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68655,"byte_end":68668,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ - Otherwise the behavior of calling `wait` after the last call returned `Ok` is UNSPECIFIED.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68673,"byte_end":68769,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ Implementers are suggested to panic on this scenario to signal a programmer error.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68774,"byte_end":68860,"line_start":76,"line_end":76,"column_start":5,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68979,"byte_end":68987,"line_start":81,"line_end":81,"column_start":11,"column_end":19},"name":"Periodic","qualname":"::timer::Periodic","value":"Periodic","parent":null,"children":[],"decl_id":null,"docs":" Marker trait that indicates that a timer is periodic\n","sig":null,"attributes":[{"value":"/ Marker trait that indicates that a timer is periodic","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68912,"byte_end":68968,"line_start":80,"line_end":80,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69039,"byte_end":69045,"line_start":84,"line_end":84,"column_start":11,"column_end":17},"name":"Cancel","qualname":"::timer::Cancel","value":"Cancel: CountDown","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":" Trait for cancelable countdowns.\n","sig":null,"attributes":[{"value":"/ Trait for cancelable countdowns.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":68992,"byte_end":69028,"line_start":83,"line_end":83,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":277},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69128,"byte_end":69133,"line_start":86,"line_end":86,"column_start":10,"column_end":15},"name":"Error","qualname":"::timer::Cancel::Error","value":"type Error;","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Error returned when a countdown can't be canceled.\n","sig":null,"attributes":[{"value":"/ Error returned when a countdown can't be canceled.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69064,"byte_end":69118,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69409,"byte_end":69415,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"cancel","qualname":"::timer::Cancel::cancel","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Tries to cancel this countdown.","sig":null,"attributes":[{"value":"/ Tries to cancel this countdown.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69140,"byte_end":69175,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69180,"byte_end":69183,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69188,"byte_end":69200,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69205,"byte_end":69208,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the countdown has already been canceled or was never started.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69213,"byte_end":69307,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ An error is also returned if the countdown is not `Periodic` and has already expired.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69312,"byte_end":69401,"line_start":93,"line_end":93,"column_start":5,"column_end":94}}]},{"kind":"Mod","id":{"krate":0,"index":279},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watchdog","qualname":"::watchdog","value":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":286}],"decl_id":null,"docs":" Traits for interactions with a processors watchdog timer.\n","sig":null,"attributes":[{"value":"! Traits for interactions with a processors watchdog timer.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69458,"byte_end":69519,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69695,"byte_end":69703,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"Watchdog","qualname":"::watchdog::Watchdog","value":"Watchdog","parent":null,"children":[{"krate":0,"index":281}],"decl_id":null,"docs":" Feeds an existing watchdog to ensure the processor isn't reset. Sometimes\n commonly referred to as \"kicking\" or \"refreshing\".\n","sig":null,"attributes":[{"value":"/ Feeds an existing watchdog to ensure the processor isn't reset. Sometimes","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69523,"byte_end":69600,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ commonly referred to as \"kicking\" or \"refreshing\".","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69601,"byte_end":69655,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69656,"byte_end":69684,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69837,"byte_end":69841,"line_start":11,"line_end":11,"column_start":8,"column_end":12},"name":"feed","qualname":"::watchdog::Watchdog::feed","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Triggers the watchdog. This must be done once the watchdog is started\n to prevent the processor being reset.\n","sig":null,"attributes":[{"value":"/ Triggers the watchdog. This must be done once the watchdog is started","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69710,"byte_end":69783,"line_start":9,"line_end":9,"column_start":5,"column_end":78}},{"value":"/ to prevent the processor being reset.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69788,"byte_end":69829,"line_start":10,"line_end":10,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69988,"byte_end":70002,"line_start":18,"line_end":18,"column_start":11,"column_end":25},"name":"WatchdogEnable","qualname":"::watchdog::WatchdogEnable","value":"WatchdogEnable","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Enables A watchdog timer to reset the processor if software is frozen or \n stalled.\n","sig":null,"attributes":[{"value":"/ Enables A watchdog timer to reset the processor if software is frozen or ","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69858,"byte_end":69935,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ stalled.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69936,"byte_end":69948,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":69949,"byte_end":69977,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":283},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70056,"byte_end":70060,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Time","qualname":"::watchdog::WatchdogEnable::Time","value":"type Time;","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Unit of time used by the watchdog\n","sig":null,"attributes":[{"value":"/ Unit of time used by the watchdog","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70009,"byte_end":70046,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70228,"byte_end":70233,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"start","qualname":"::watchdog::WatchdogEnable::start","value":"fn <T> (&mut self, period: T) -> ()","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Starts the watchdog with a given period, typically once this is done \n the watchdog needs to be kicked periodically or the processor is reset. \n","sig":null,"attributes":[{"value":"/ Starts the watchdog with a given period, typically once this is done ","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70066,"byte_end":70139,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ the watchdog needs to be kicked periodically or the processor is reset. ","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70144,"byte_end":70220,"line_start":22,"line_end":22,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":286},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70400,"byte_end":70415,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"name":"WatchdogDisable","qualname":"::watchdog::WatchdogDisable","value":"WatchdogDisable","parent":null,"children":[{"krate":0,"index":287}],"decl_id":null,"docs":" Disables a running watchdog timer so the processor won't be reset.\n","sig":null,"attributes":[{"value":"/ Disables a running watchdog timer so the processor won't be reset.","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70290,"byte_end":70360,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70361,"byte_end":70389,"line_start":28,"line_end":28,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70455,"byte_end":70462,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"disable","qualname":"::watchdog::WatchdogDisable::disable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" Disables the watchdog\n","sig":null,"attributes":[{"value":"/ Disables the watchdog","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/watchdog.rs","byte_start":70422,"byte_end":70447,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":288},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22453,"byte_end":22460,"line_start":757,"line_end":757,"column_start":11,"column_end":18},"name":"Capture","qualname":"::Capture","value":"Capture","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":" Input capture","sig":null,"attributes":[{"value":"/ Input capture","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20749,"byte_end":20766,"line_start":703,"line_end":703,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20767,"byte_end":20770,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20771,"byte_end":20856,"line_start":705,"line_end":705,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20857,"byte_end":20860,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20861,"byte_end":20875,"line_start":707,"line_end":707,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20876,"byte_end":20879,"line_start":708,"line_end":708,"column_start":1,"column_end":4}},{"value":"/ You can use this interface to measure the period of (quasi) periodic signals","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20880,"byte_end":20960,"line_start":709,"line_end":709,"column_start":1,"column_end":81}},{"value":"/ / events","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20961,"byte_end":20973,"line_start":710,"line_end":710,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20974,"byte_end":20977,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20978,"byte_end":20985,"line_start":712,"line_end":712,"column_start":1,"column_end":8}},{"value":"/ extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20986,"byte_end":21023,"line_start":713,"line_end":713,"column_start":1,"column_end":38}},{"value":"/ #[macro_use(block)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21024,"byte_end":21047,"line_start":714,"line_end":714,"column_start":1,"column_end":24}},{"value":"/ extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21048,"byte_end":21068,"line_start":715,"line_end":715,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21069,"byte_end":21072,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21073,"byte_end":21097,"line_start":717,"line_end":717,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21098,"byte_end":21101,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21102,"byte_end":21117,"line_start":719,"line_end":719,"column_start":1,"column_end":16}},{"value":"/     let mut capture: Capture1 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21118,"byte_end":21155,"line_start":720,"line_end":720,"column_start":1,"column_end":38}},{"value":"/         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21156,"byte_end":21173,"line_start":721,"line_end":721,"column_start":1,"column_end":18}},{"value":"/ #       Capture1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21174,"byte_end":21194,"line_start":722,"line_end":722,"column_start":1,"column_end":21}},{"value":"/     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21195,"byte_end":21205,"line_start":723,"line_end":723,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21206,"byte_end":21209,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/     capture.set_resolution(1.ms());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21210,"byte_end":21249,"line_start":725,"line_end":725,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21250,"byte_end":21253,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/     let before = block!(capture.capture(Channel::_1)).unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21254,"byte_end":21321,"line_start":727,"line_end":727,"column_start":1,"column_end":68}},{"value":"/     let after = block!(capture.capture(Channel::_1)).unwrap();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21322,"byte_end":21388,"line_start":728,"line_end":728,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21389,"byte_end":21392,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/     let period = after.wrapping_sub(before);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21393,"byte_end":21441,"line_start":730,"line_end":730,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21442,"byte_end":21445,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/     println!(\"Period: {} ms\", period);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21446,"byte_end":21488,"line_start":732,"line_end":732,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21489,"byte_end":21494,"line_start":733,"line_end":733,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21495,"byte_end":21498,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ # extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21499,"byte_end":21523,"line_start":735,"line_end":735,"column_start":1,"column_end":25}},{"value":"/ # use void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21524,"byte_end":21545,"line_start":736,"line_end":736,"column_start":1,"column_end":22}},{"value":"/ # struct MilliSeconds(u32);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21546,"byte_end":21577,"line_start":737,"line_end":737,"column_start":1,"column_end":32}},{"value":"/ # trait U32Ext { fn ms(self) -> MilliSeconds; }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21578,"byte_end":21629,"line_start":738,"line_end":738,"column_start":1,"column_end":52}},{"value":"/ # impl U32Ext for u32 { fn ms(self) -> MilliSeconds { MilliSeconds(self) } }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21630,"byte_end":21710,"line_start":739,"line_end":739,"column_start":1,"column_end":81}},{"value":"/ # struct Capture1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21711,"byte_end":21733,"line_start":740,"line_end":740,"column_start":1,"column_end":23}},{"value":"/ # enum Channel { _1 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21734,"byte_end":21759,"line_start":741,"line_end":741,"column_start":1,"column_end":26}},{"value":"/ # impl hal::Capture for Capture1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21760,"byte_end":21798,"line_start":742,"line_end":742,"column_start":1,"column_end":39}},{"value":"/ #     type Capture = u16;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21799,"byte_end":21828,"line_start":743,"line_end":743,"column_start":1,"column_end":30}},{"value":"/ #     type Channel = Channel;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21829,"byte_end":21862,"line_start":744,"line_end":744,"column_start":1,"column_end":34}},{"value":"/ #     type Error = Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21863,"byte_end":21891,"line_start":745,"line_end":745,"column_start":1,"column_end":29}},{"value":"/ #     type Time = MilliSeconds;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21892,"byte_end":21927,"line_start":746,"line_end":746,"column_start":1,"column_end":36}},{"value":"/ #     fn capture(&mut self, _: Channel) -> ::nb::Result<u16, Void> { Ok(0) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":21928,"byte_end":22008,"line_start":747,"line_end":747,"column_start":1,"column_end":81}},{"value":"/ #     fn disable(&mut self, _: Channel) { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22009,"byte_end":22073,"line_start":748,"line_end":748,"column_start":1,"column_end":65}},{"value":"/ #     fn enable(&mut self, _: Channel) { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22074,"byte_end":22137,"line_start":749,"line_end":749,"column_start":1,"column_end":64}},{"value":"/ #     fn get_resolution(&self) -> MilliSeconds { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22138,"byte_end":22209,"line_start":750,"line_end":750,"column_start":1,"column_end":72}},{"value":"/ #     fn set_resolution<T>(&mut self, _: T) where T: Into<MilliSeconds> {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22210,"byte_end":22288,"line_start":751,"line_end":751,"column_start":1,"column_end":79}},{"value":"/ # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22289,"byte_end":22296,"line_start":752,"line_end":752,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22297,"byte_end":22304,"line_start":753,"line_end":753,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22305,"byte_end":22333,"line_start":754,"line_end":754,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":289},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22674,"byte_end":22679,"line_start":764,"line_end":764,"column_start":10,"column_end":15},"name":"Error","qualname":"::Capture::Error","value":"type Error;","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Enumeration of `Capture` errors","sig":null,"attributes":[{"value":"/ Enumeration of `Capture` errors","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22467,"byte_end":22502,"line_start":758,"line_end":758,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22507,"byte_end":22510,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ Possible errors:","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22515,"byte_end":22535,"line_start":760,"line_end":760,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22540,"byte_end":22543,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ - *overcapture*, the previous capture value was overwritten because it","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22548,"byte_end":22622,"line_start":762,"line_end":762,"column_start":5,"column_end":79}},{"value":"/   was not read in a timely manner","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22627,"byte_end":22664,"line_start":763,"line_end":763,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":290},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22869,"byte_end":22876,"line_start":770,"line_end":770,"column_start":10,"column_end":17},"name":"Channel","qualname":"::Capture::Channel","value":"type Channel;","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Enumeration of channels that can be used with this `Capture` interface","sig":null,"attributes":[{"value":"/ Enumeration of channels that can be used with this `Capture` interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22686,"byte_end":22760,"line_start":766,"line_end":766,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22765,"byte_end":22768,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ If your `Capture` interface has no channels you can use the type `()`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22773,"byte_end":22846,"line_start":768,"line_end":768,"column_start":5,"column_end":78}},{"value":"/ here","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22851,"byte_end":22859,"line_start":769,"line_end":769,"column_start":5,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":291},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22968,"byte_end":22972,"line_start":773,"line_end":773,"column_start":10,"column_end":14},"name":"Time","qualname":"::Capture::Time","value":"type Time;","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A time unit that can be converted into a human time unit (e.g. seconds)\n","sig":null,"attributes":[{"value":"/ A time unit that can be converted into a human time unit (e.g. seconds)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22883,"byte_end":22958,"line_start":772,"line_end":772,"column_start":5,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":292},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23036,"byte_end":23043,"line_start":776,"line_end":776,"column_start":10,"column_end":17},"name":"Capture","qualname":"::Capture::Capture","value":"type Capture;","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" The type of the value returned by `capture`\n","sig":null,"attributes":[{"value":"/ The type of the value returned by `capture`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":22979,"byte_end":23026,"line_start":775,"line_end":775,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23327,"byte_end":23334,"line_start":783,"line_end":783,"column_start":8,"column_end":15},"name":"capture","qualname":"::Capture::capture","value":"fn (&mut self, channel: Self::Channel) -> nb::Result<Self::Capture, Self::Error>","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" \"Waits\" for a transition in the capture `channel` and returns the value\n of counter at that instant","sig":null,"attributes":[{"value":"/ \"Waits\" for a transition in the capture `channel` and returns the value","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23050,"byte_end":23125,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ of counter at that instant","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23130,"byte_end":23160,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23165,"byte_end":23168,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ NOTE that you must multiply the returned value by the *resolution* of","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23173,"byte_end":23246,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ this `Capture` interface to get a human time unit (e.g. seconds)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23251,"byte_end":23319,"line_start":782,"line_end":782,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23458,"byte_end":23465,"line_start":786,"line_end":786,"column_start":8,"column_end":15},"name":"disable","qualname":"::Capture::disable","value":"fn (&mut self, channel: Self::Channel) -> ()","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Disables a capture `channel`\n","sig":null,"attributes":[{"value":"/ Disables a capture `channel`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23418,"byte_end":23450,"line_start":785,"line_end":785,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23546,"byte_end":23552,"line_start":789,"line_end":789,"column_start":8,"column_end":14},"name":"enable","qualname":"::Capture::enable","value":"fn (&mut self, channel: Self::Channel) -> ()","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Enables a capture `channel`\n","sig":null,"attributes":[{"value":"/ Enables a capture `channel`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23507,"byte_end":23538,"line_start":788,"line_end":788,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23636,"byte_end":23650,"line_start":792,"line_end":792,"column_start":8,"column_end":22},"name":"get_resolution","qualname":"::Capture::get_resolution","value":"fn (&self) -> Self::Time","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Returns the current resolution\n","sig":null,"attributes":[{"value":"/ Returns the current resolution","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23594,"byte_end":23628,"line_start":791,"line_end":791,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23730,"byte_end":23744,"line_start":795,"line_end":795,"column_start":8,"column_end":22},"name":"set_resolution","qualname":"::Capture::set_resolution","value":"fn <R> (&mut self, resolution: R) -> ()","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Sets the resolution of the capture timer\n","sig":null,"attributes":[{"value":"/ Sets the resolution of the capture timer","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23678,"byte_end":23722,"line_start":794,"line_end":794,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":299},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25453,"byte_end":25456,"line_start":851,"line_end":851,"column_start":11,"column_end":14},"name":"Pwm","qualname":"::Pwm","value":"Pwm","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"decl_id":null,"docs":" Pulse Width Modulation","sig":null,"attributes":[{"value":"/ Pulse Width Modulation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23816,"byte_end":23842,"line_start":800,"line_end":800,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23843,"byte_end":23846,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23847,"byte_end":23932,"line_start":802,"line_end":802,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23933,"byte_end":23936,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23937,"byte_end":23951,"line_start":804,"line_end":804,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23952,"byte_end":23955,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ Use this interface to control the power output of some actuator","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":23956,"byte_end":24023,"line_start":806,"line_end":806,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24024,"byte_end":24027,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24028,"byte_end":24035,"line_start":808,"line_end":808,"column_start":1,"column_end":8}},{"value":"/ extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24036,"byte_end":24073,"line_start":809,"line_end":809,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24074,"byte_end":24077,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24078,"byte_end":24102,"line_start":811,"line_end":811,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24103,"byte_end":24106,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24107,"byte_end":24122,"line_start":813,"line_end":813,"column_start":1,"column_end":16}},{"value":"/     let mut pwm: Pwm1 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24123,"byte_end":24152,"line_start":814,"line_end":814,"column_start":1,"column_end":30}},{"value":"/         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24153,"byte_end":24170,"line_start":815,"line_end":815,"column_start":1,"column_end":18}},{"value":"/ #       Pwm1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24171,"byte_end":24187,"line_start":816,"line_end":816,"column_start":1,"column_end":17}},{"value":"/     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24188,"byte_end":24198,"line_start":817,"line_end":817,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24199,"byte_end":24202,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/     pwm.set_period(1.khz());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24203,"byte_end":24235,"line_start":819,"line_end":819,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24236,"byte_end":24239,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/     let max_duty = pwm.get_max_duty();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24240,"byte_end":24282,"line_start":821,"line_end":821,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24283,"byte_end":24286,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/     // brightest LED","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24287,"byte_end":24311,"line_start":823,"line_end":823,"column_start":1,"column_end":25}},{"value":"/     pwm.set_duty(Channel::_1, max_duty);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24312,"byte_end":24356,"line_start":824,"line_end":824,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24357,"byte_end":24360,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/     // dimmer LED","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24361,"byte_end":24382,"line_start":826,"line_end":826,"column_start":1,"column_end":22}},{"value":"/     pwm.set_duty(Channel::_2, max_duty / 4);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24383,"byte_end":24431,"line_start":827,"line_end":827,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24432,"byte_end":24437,"line_start":828,"line_end":828,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24438,"byte_end":24441,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ # struct KiloHertz(u32);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24442,"byte_end":24470,"line_start":830,"line_end":830,"column_start":1,"column_end":29}},{"value":"/ # trait U32Ext { fn khz(self) -> KiloHertz; }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24471,"byte_end":24520,"line_start":831,"line_end":831,"column_start":1,"column_end":50}},{"value":"/ # impl U32Ext for u32 { fn khz(self) -> KiloHertz { KiloHertz(self) } }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24521,"byte_end":24596,"line_start":832,"line_end":832,"column_start":1,"column_end":76}},{"value":"/ # enum Channel { _1, _2 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24597,"byte_end":24626,"line_start":833,"line_end":833,"column_start":1,"column_end":30}},{"value":"/ # struct Pwm1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24627,"byte_end":24645,"line_start":834,"line_end":834,"column_start":1,"column_end":19}},{"value":"/ # impl hal::Pwm for Pwm1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24646,"byte_end":24676,"line_start":835,"line_end":835,"column_start":1,"column_end":31}},{"value":"/ #     type Channel = Channel;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24677,"byte_end":24710,"line_start":836,"line_end":836,"column_start":1,"column_end":34}},{"value":"/ #     type Time = KiloHertz;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24711,"byte_end":24743,"line_start":837,"line_end":837,"column_start":1,"column_end":33}},{"value":"/ #     type Duty = u16;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24744,"byte_end":24770,"line_start":838,"line_end":838,"column_start":1,"column_end":27}},{"value":"/ #     fn disable(&mut self, _: Channel) { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24771,"byte_end":24835,"line_start":839,"line_end":839,"column_start":1,"column_end":65}},{"value":"/ #     fn enable(&mut self, _: Channel) { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24836,"byte_end":24899,"line_start":840,"line_end":840,"column_start":1,"column_end":64}},{"value":"/ #     fn get_duty(&self, _: Channel) -> u16 { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24900,"byte_end":24968,"line_start":841,"line_end":841,"column_start":1,"column_end":69}},{"value":"/ #     fn get_max_duty(&self) -> u16 { 0 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":24969,"byte_end":25014,"line_start":842,"line_end":842,"column_start":1,"column_end":46}},{"value":"/ #     fn set_duty(&mut self, _: Channel, _: u16) {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25015,"byte_end":25070,"line_start":843,"line_end":843,"column_start":1,"column_end":56}},{"value":"/ #     fn get_period(&self) -> KiloHertz { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25071,"byte_end":25135,"line_start":844,"line_end":844,"column_start":1,"column_end":65}},{"value":"/ #     fn set_period<T>(&mut self, _: T) where T: Into<KiloHertz> {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25136,"byte_end":25207,"line_start":845,"line_end":845,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25208,"byte_end":25215,"line_start":846,"line_end":846,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25216,"byte_end":25223,"line_start":847,"line_end":847,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25224,"byte_end":25252,"line_start":848,"line_end":848,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":300},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25638,"byte_end":25645,"line_start":856,"line_end":856,"column_start":10,"column_end":17},"name":"Channel","qualname":"::Pwm::Channel","value":"type Channel;","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Enumeration of channels that can be used with this `Pwm` interface","sig":null,"attributes":[{"value":"/ Enumeration of channels that can be used with this `Pwm` interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25463,"byte_end":25533,"line_start":852,"line_end":852,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25538,"byte_end":25541,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ If your `Pwm` interface has no channels you can use the type `()`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25546,"byte_end":25615,"line_start":854,"line_end":854,"column_start":5,"column_end":74}},{"value":"/ here","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25620,"byte_end":25628,"line_start":855,"line_end":855,"column_start":5,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":301},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25737,"byte_end":25741,"line_start":859,"line_end":859,"column_start":10,"column_end":14},"name":"Time","qualname":"::Pwm::Time","value":"type Time;","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" A time unit that can be converted into a human time unit (e.g. seconds)\n","sig":null,"attributes":[{"value":"/ A time unit that can be converted into a human time unit (e.g. seconds)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25652,"byte_end":25727,"line_start":858,"line_end":858,"column_start":5,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25952,"byte_end":25956,"line_start":865,"line_end":865,"column_start":10,"column_end":14},"name":"Duty","qualname":"::Pwm::Duty","value":"type Duty;","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Type for the `duty` methods","sig":null,"attributes":[{"value":"/ Type for the `duty` methods","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25748,"byte_end":25779,"line_start":861,"line_end":861,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25784,"byte_end":25787,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ The implementer is free to choose a float / percentage representation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25792,"byte_end":25865,"line_start":863,"line_end":863,"column_start":5,"column_end":78}},{"value":"/ (e.g. `0.0 .. 1.0`) or an integer representation (e.g. `0 .. 65535`)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25870,"byte_end":25942,"line_start":864,"line_end":864,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25999,"byte_end":26006,"line_start":868,"line_end":868,"column_start":8,"column_end":15},"name":"disable","qualname":"::Pwm::disable","value":"fn (&mut self, channel: Self::Channel) -> ()","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Disables a PWM `channel`\n","sig":null,"attributes":[{"value":"/ Disables a PWM `channel`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":25963,"byte_end":25991,"line_start":867,"line_end":867,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26083,"byte_end":26089,"line_start":871,"line_end":871,"column_start":8,"column_end":14},"name":"enable","qualname":"::Pwm::enable","value":"fn (&mut self, channel: Self::Channel) -> ()","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Enables a PWM `channel`\n","sig":null,"attributes":[{"value":"/ Enables a PWM `channel`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26048,"byte_end":26075,"line_start":870,"line_end":870,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26173,"byte_end":26183,"line_start":874,"line_end":874,"column_start":8,"column_end":18},"name":"get_period","qualname":"::Pwm::get_period","value":"fn (&self) -> Self::Time","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Returns the current PWM period\n","sig":null,"attributes":[{"value":"/ Returns the current PWM period","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26131,"byte_end":26165,"line_start":873,"line_end":873,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26253,"byte_end":26261,"line_start":877,"line_end":877,"column_start":8,"column_end":16},"name":"get_duty","qualname":"::Pwm::get_duty","value":"fn (&self, channel: Self::Channel) -> Self::Duty","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Returns the current duty cycle\n","sig":null,"attributes":[{"value":"/ Returns the current duty cycle","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26211,"byte_end":26245,"line_start":876,"line_end":876,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26361,"byte_end":26373,"line_start":880,"line_end":880,"column_start":8,"column_end":20},"name":"get_max_duty","qualname":"::Pwm::get_max_duty","value":"fn (&self) -> Self::Duty","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Returns the maximum duty cycle value\n","sig":null,"attributes":[{"value":"/ Returns the maximum duty cycle value","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26313,"byte_end":26353,"line_start":879,"line_end":879,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26434,"byte_end":26442,"line_start":883,"line_end":883,"column_start":8,"column_end":16},"name":"set_duty","qualname":"::Pwm::set_duty","value":"fn (&mut self, channel: Self::Channel, duty: Self::Duty) -> ()","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Sets a new duty cycle\n","sig":null,"attributes":[{"value":"/ Sets a new duty cycle","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26401,"byte_end":26426,"line_start":882,"line_end":882,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26535,"byte_end":26545,"line_start":886,"line_end":886,"column_start":8,"column_end":18},"name":"set_period","qualname":"::Pwm::set_period","value":"fn <P> (&mut self, period: P) -> ()","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Sets a new PWM period\n","sig":null,"attributes":[{"value":"/ Sets a new PWM period","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26502,"byte_end":26527,"line_start":885,"line_end":885,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26684,"byte_end":26690,"line_start":894,"line_end":894,"column_start":11,"column_end":17},"name":"PwmPin","qualname":"::PwmPin","value":"PwmPin","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"decl_id":null,"docs":" A single PWM channel / pin","sig":null,"attributes":[{"value":"/ A single PWM channel / pin","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26613,"byte_end":26643,"line_start":891,"line_end":891,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26644,"byte_end":26647,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ See `Pwm` for details","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26648,"byte_end":26673,"line_start":893,"line_end":893,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":312},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26901,"byte_end":26905,"line_start":899,"line_end":899,"column_start":10,"column_end":14},"name":"Duty","qualname":"::PwmPin::Duty","value":"type Duty;","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Type for the `duty` methods","sig":null,"attributes":[{"value":"/ Type for the `duty` methods","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26697,"byte_end":26728,"line_start":895,"line_end":895,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26733,"byte_end":26736,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ The implementer is free to choose a float / percentage representation","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26741,"byte_end":26814,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ (e.g. `0.0 .. 1.0`) or an integer representation (e.g. `0 .. 65535`)","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26819,"byte_end":26891,"line_start":898,"line_end":898,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26948,"byte_end":26955,"line_start":902,"line_end":902,"column_start":8,"column_end":15},"name":"disable","qualname":"::PwmPin::disable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Disables a PWM `channel`\n","sig":null,"attributes":[{"value":"/ Disables a PWM `channel`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26912,"byte_end":26940,"line_start":901,"line_end":901,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27008,"byte_end":27014,"line_start":905,"line_end":905,"column_start":8,"column_end":14},"name":"enable","qualname":"::PwmPin::enable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Enables a PWM `channel`\n","sig":null,"attributes":[{"value":"/ Enables a PWM `channel`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":26973,"byte_end":27000,"line_start":904,"line_end":904,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27074,"byte_end":27082,"line_start":908,"line_end":908,"column_start":8,"column_end":16},"name":"get_duty","qualname":"::PwmPin::get_duty","value":"fn (&self) -> Self::Duty","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Returns the current duty cycle\n","sig":null,"attributes":[{"value":"/ Returns the current duty cycle","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27032,"byte_end":27066,"line_start":907,"line_end":907,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27158,"byte_end":27170,"line_start":911,"line_end":911,"column_start":8,"column_end":20},"name":"get_max_duty","qualname":"::PwmPin::get_max_duty","value":"fn (&self) -> Self::Duty","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Returns the maximum duty cycle value\n","sig":null,"attributes":[{"value":"/ Returns the maximum duty cycle value","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27110,"byte_end":27150,"line_start":910,"line_end":910,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27231,"byte_end":27239,"line_start":914,"line_end":914,"column_start":8,"column_end":16},"name":"set_duty","qualname":"::PwmPin::set_duty","value":"fn (&mut self, duty: Self::Duty) -> ()","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Sets a new duty cycle\n","sig":null,"attributes":[{"value":"/ Sets a new duty cycle","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27198,"byte_end":27223,"line_start":913,"line_end":913,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":318},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28829,"byte_end":28832,"line_start":973,"line_end":973,"column_start":11,"column_end":14},"name":"Qei","qualname":"::Qei","value":"Qei","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" Quadrature encoder interface","sig":null,"attributes":[{"value":"/ Quadrature encoder interface","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27273,"byte_end":27305,"line_start":917,"line_end":917,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27306,"byte_end":27309,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27310,"byte_end":27395,"line_start":919,"line_end":919,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27396,"byte_end":27399,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27400,"byte_end":27414,"line_start":921,"line_end":921,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27415,"byte_end":27418,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ You can use this interface to measure the speed of a motor","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27419,"byte_end":27481,"line_start":923,"line_end":923,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27482,"byte_end":27485,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27486,"byte_end":27493,"line_start":925,"line_end":925,"column_start":1,"column_end":8}},{"value":"/ extern crate embedded_hal as hal;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27494,"byte_end":27531,"line_start":926,"line_end":926,"column_start":1,"column_end":38}},{"value":"/ #[macro_use(block)]","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27532,"byte_end":27555,"line_start":927,"line_end":927,"column_start":1,"column_end":24}},{"value":"/ extern crate nb;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27556,"byte_end":27576,"line_start":928,"line_end":928,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27577,"byte_end":27580,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ use hal::prelude::*;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27581,"byte_end":27605,"line_start":930,"line_end":930,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27606,"byte_end":27609,"line_start":931,"line_end":931,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27610,"byte_end":27625,"line_start":932,"line_end":932,"column_start":1,"column_end":16}},{"value":"/     let mut qei: Qei1 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27626,"byte_end":27655,"line_start":933,"line_end":933,"column_start":1,"column_end":30}},{"value":"/         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27656,"byte_end":27673,"line_start":934,"line_end":934,"column_start":1,"column_end":18}},{"value":"/ #       Qei1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27674,"byte_end":27690,"line_start":935,"line_end":935,"column_start":1,"column_end":17}},{"value":"/     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27691,"byte_end":27701,"line_start":936,"line_end":936,"column_start":1,"column_end":11}},{"value":"/     let mut timer: Timer6 = {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27702,"byte_end":27735,"line_start":937,"line_end":937,"column_start":1,"column_end":34}},{"value":"/         // ..","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27736,"byte_end":27753,"line_start":938,"line_end":938,"column_start":1,"column_end":18}},{"value":"/ #       Timer6","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27754,"byte_end":27772,"line_start":939,"line_end":939,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27773,"byte_end":27783,"line_start":940,"line_end":940,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27784,"byte_end":27787,"line_start":941,"line_end":941,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27788,"byte_end":27791,"line_start":942,"line_end":942,"column_start":1,"column_end":4}},{"value":"/     let before = qei.count();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27792,"byte_end":27825,"line_start":943,"line_end":943,"column_start":1,"column_end":34}},{"value":"/     timer.start(1.s());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27826,"byte_end":27853,"line_start":944,"line_end":944,"column_start":1,"column_end":28}},{"value":"/     block!(timer.wait());","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27854,"byte_end":27883,"line_start":945,"line_end":945,"column_start":1,"column_end":30}},{"value":"/     let after = qei.count();","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27884,"byte_end":27916,"line_start":946,"line_end":946,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27917,"byte_end":27920,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/     let speed = after.wrapping_sub(before);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27921,"byte_end":27968,"line_start":948,"line_end":948,"column_start":1,"column_end":48}},{"value":"/     println!(\"Speed: {} pulses per second\", speed);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":27969,"byte_end":28024,"line_start":949,"line_end":949,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28025,"byte_end":28030,"line_start":950,"line_end":950,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28031,"byte_end":28034,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ # extern crate void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28035,"byte_end":28059,"line_start":952,"line_end":952,"column_start":1,"column_end":25}},{"value":"/ # use void::Void;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28060,"byte_end":28081,"line_start":953,"line_end":953,"column_start":1,"column_end":22}},{"value":"/ # struct Seconds(u32);","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28082,"byte_end":28108,"line_start":954,"line_end":954,"column_start":1,"column_end":27}},{"value":"/ # trait U32Ext { fn s(self) -> Seconds; }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28109,"byte_end":28154,"line_start":955,"line_end":955,"column_start":1,"column_end":46}},{"value":"/ # impl U32Ext for u32 { fn s(self) -> Seconds { Seconds(self) } }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28155,"byte_end":28224,"line_start":956,"line_end":956,"column_start":1,"column_end":70}},{"value":"/ # struct Qei1;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28225,"byte_end":28243,"line_start":957,"line_end":957,"column_start":1,"column_end":19}},{"value":"/ # impl hal::Qei for Qei1 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28244,"byte_end":28274,"line_start":958,"line_end":958,"column_start":1,"column_end":31}},{"value":"/ #     type Count = u16;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28275,"byte_end":28302,"line_start":959,"line_end":959,"column_start":1,"column_end":28}},{"value":"/ #     fn count(&self) -> u16 { 0 }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28303,"byte_end":28341,"line_start":960,"line_end":960,"column_start":1,"column_end":39}},{"value":"/ #     fn direction(&self) -> ::hal::Direction { unimplemented!() }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28342,"byte_end":28412,"line_start":961,"line_end":961,"column_start":1,"column_end":71}},{"value":"/ # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28413,"byte_end":28420,"line_start":962,"line_end":962,"column_start":1,"column_end":8}},{"value":"/ # struct Timer6;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28421,"byte_end":28441,"line_start":963,"line_end":963,"column_start":1,"column_end":21}},{"value":"/ # impl hal::timer::CountDown for Timer6 {","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28442,"byte_end":28487,"line_start":964,"line_end":964,"column_start":1,"column_end":46}},{"value":"/ #     type Time = Seconds;","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28488,"byte_end":28518,"line_start":965,"line_end":965,"column_start":1,"column_end":31}},{"value":"/ #     fn start<T>(&mut self, _: T) where T: Into<Seconds> {}","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28519,"byte_end":28583,"line_start":966,"line_end":966,"column_start":1,"column_end":65}},{"value":"/ #     fn wait(&mut self) -> ::nb::Result<(), Void> { Ok(()) }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28584,"byte_end":28649,"line_start":967,"line_end":967,"column_start":1,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28650,"byte_end":28657,"line_start":968,"line_end":968,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28658,"byte_end":28665,"line_start":969,"line_end":969,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28666,"byte_end":28694,"line_start":970,"line_end":970,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":319},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28894,"byte_end":28899,"line_start":975,"line_end":975,"column_start":10,"column_end":15},"name":"Count","qualname":"::Qei::Count","value":"type Count;","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" The type of the value returned by `count`\n","sig":null,"attributes":[{"value":"/ The type of the value returned by `count`","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28839,"byte_end":28884,"line_start":974,"line_end":974,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28964,"byte_end":28969,"line_start":978,"line_end":978,"column_start":8,"column_end":13},"name":"count","qualname":"::Qei::count","value":"fn (&self) -> Self::Count","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Returns the current pulse count of the encoder\n","sig":null,"attributes":[{"value":"/ Returns the current pulse count of the encoder","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28906,"byte_end":28956,"line_start":977,"line_end":977,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29037,"byte_end":29046,"line_start":981,"line_end":981,"column_start":8,"column_end":17},"name":"direction","qualname":"::Qei::direction","value":"fn (&self) -> Direction","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Returns the count direction\n","sig":null,"attributes":[{"value":"/ Returns the count direction","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":28998,"byte_end":29029,"line_start":980,"line_end":980,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":364},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29350,"byte_end":29362,"line_start":992,"line_end":992,"column_start":5,"column_end":17},"name":"Downcounting","qualname":"::Direction::Downcounting","value":"Direction::Downcounting","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" 3, 2, 1\n","sig":null,"attributes":[{"value":"/ 3, 2, 1","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29334,"byte_end":29345,"line_start":991,"line_end":991,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29384,"byte_end":29394,"line_start":994,"line_end":994,"column_start":5,"column_end":15},"name":"Upcounting","qualname":"::Direction::Upcounting","value":"Direction::Upcounting","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" 1, 2, 3\n","sig":null,"attributes":[{"value":"/ 1, 2, 3","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29368,"byte_end":29379,"line_start":993,"line_end":993,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":363},"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29318,"byte_end":29327,"line_start":990,"line_end":990,"column_start":10,"column_end":19},"name":"Direction","qualname":"::Direction","value":"Direction::{Downcounting, Upcounting}","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366}],"decl_id":null,"docs":" Count direction","sig":null,"attributes":[{"value":"/ Count direction","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29071,"byte_end":29090,"line_start":984,"line_end":984,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29091,"byte_end":29094,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ *This enumeration is available if embedded-hal is built with the `\"unproven\"` feature.*","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29095,"byte_end":29186,"line_start":986,"line_end":986,"column_start":1,"column_end":92}},{"value":"cfg(feature = \"unproven\")","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":29232,"byte_end":29260,"line_start":988,"line_end":988,"column_start":1,"column_end":29}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":40192,"byte_end":40193,"line_start":34,"line_end":34,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41679,"byte_end":41680,"line_start":39,"line_end":39,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42283,"byte_end":42284,"line_start":62,"line_end":62,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42915,"byte_end":42916,"line_start":87,"line_end":87,"column_start":50,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47448,"byte_end":47449,"line_start":117,"line_end":117,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51412,"byte_end":51413,"line_start":108,"line_end":108,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52499,"byte_end":52511,"line_start":15,"line_end":15,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52860,"byte_end":52872,"line_start":32,"line_end":32,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":53170,"byte_end":53182,"line_start":45,"line_end":45,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":53607,"byte_end":53619,"line_start":63,"line_end":63,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54097,"byte_end":54108,"line_start":85,"line_end":85,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54355,"byte_end":54366,"line_start":98,"line_end":98,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54681,"byte_end":54692,"line_start":112,"line_end":112,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":58306,"byte_end":58307,"line_start":10,"line_end":10,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":58783,"byte_end":58784,"line_start":29,"line_end":29,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":59189,"byte_end":59190,"line_start":46,"line_end":46,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/fmt.rs","byte_start":61892,"byte_end":61897,"line_start":6,"line_end":6,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20616,"byte_end":20619,"line_start":693,"line_end":693,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20629,"byte_end":20637,"line_start":694,"line_end":694,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33400,"byte_end":33405,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33415,"byte_end":33418,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":26}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33428,"byte_end":33431,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33441,"byte_end":33447,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/mod.rs","byte_start":33457,"byte_end":33460,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20647,"byte_end":20654,"line_start":695,"line_end":695,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43577,"byte_end":43579,"line_start":9,"line_end":9,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43615,"byte_end":43617,"line_start":12,"line_end":12,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":126}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43709,"byte_end":43718,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":151}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/mod.rs","byte_start":43807,"byte_end":43816,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20664,"byte_end":20667,"line_start":696,"line_end":696,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":209}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20677,"byte_end":20684,"line_start":697,"line_end":697,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":218}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20694,"byte_end":20700,"line_start":698,"line_end":698,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":245}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20710,"byte_end":20713,"line_start":699,"line_end":699,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":256}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20723,"byte_end":20728,"line_start":700,"line_end":700,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":267}},{"kind":"Mod","span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","byte_start":20738,"byte_end":20746,"line_start":701,"line_end":701,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":279}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":40122,"byte_end":40127,"line_start":32,"line_end":32,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":251},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/serial.rs","byte_start":40192,"byte_end":40193,"line_start":34,"line_end":34,"column_start":55,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41613,"byte_end":41623,"line_start":37,"line_end":37,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":41679,"byte_end":41680,"line_start":39,"line_end":39,"column_start":49,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":83},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42220,"byte_end":42230,"line_start":60,"line_end":60,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42283,"byte_end":42284,"line_start":62,"line_end":62,"column_start":46,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42848,"byte_end":42858,"line_start":85,"line_end":85,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/blocking/spi.rs","byte_start":42915,"byte_end":42916,"line_start":87,"line_end":87,"column_start":50,"column_end":51},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":100},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47353,"byte_end":47362,"line_start":114,"line_end":114,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":106},"to":{"krate":0,"index":119}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47365,"byte_end":47382,"line_start":114,"line_end":114,"column_start":36,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":109},"to":{"krate":0,"index":119}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1.rs","byte_start":47448,"byte_end":47449,"line_start":117,"line_end":117,"column_start":37,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":112}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":48967,"byte_end":48976,"line_start":27,"line_end":27,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":127},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51342,"byte_end":51351,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":127},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51354,"byte_end":51371,"line_start":106,"line_end":106,"column_start":36,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":131},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2.rs","byte_start":51412,"byte_end":51413,"line_start":108,"line_end":108,"column_start":37,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":144},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52499,"byte_end":52511,"line_start":15,"line_end":15,"column_start":13,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":52860,"byte_end":52872,"line_start":32,"line_end":32,"column_start":25,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":53170,"byte_end":53182,"line_start":45,"line_end":45,"column_start":31,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":154},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":53607,"byte_end":53619,"line_start":63,"line_end":63,"column_start":39,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":154},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54097,"byte_end":54108,"line_start":85,"line_end":85,"column_start":13,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54355,"byte_end":54366,"line_start":98,"line_end":98,"column_start":25,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":175},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v1_compat.rs","byte_start":54681,"byte_end":54692,"line_start":112,"line_end":112,"column_start":30,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":175},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":58306,"byte_end":58307,"line_start":10,"line_end":10,"column_start":28,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":195},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":58783,"byte_end":58784,"line_start":29,"line_end":29,"column_start":36,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":200},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/digital/v2_compat.rs","byte_start":59189,"byte_end":59190,"line_start":46,"line_end":46,"column_start":27,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":204},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/fmt.rs","byte_start":61892,"byte_end":61897,"line_start":6,"line_end":6,"column_start":39,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":251},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/iot_dev/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/timer.rs","byte_start":69048,"byte_end":69057,"line_start":84,"line_end":84,"column_start":20,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":270},"to":{"krate":0,"index":276}}]}